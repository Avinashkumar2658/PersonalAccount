{"version":3,"sources":["./src/app/components/rsidebar/rsidebar.component.ts","./src/app/components/rsidebar/rsidebar.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/cash-book/cash-book.component.ts","./src/app/components/cash-book/cash-book.component.html","./src/environments/environment.ts","./src/app/components/expense/expense.component.ts","./src/app/components/expense/expense.component.html","./src/app/components/expense-categories/expense-categories.component.ts","./src/app/components/expense-categories/expense-categories.component.html","./src/app/service/http/basic-auth.service.ts","./src/app/table/expense-cat-table/expense-cat-table.component.ts","./src/app/table/expense-cat-table/expense-cat-table.component.html","./src/app/service/http/http-intercepter-basic-auth.service.ts","./src/app/table/income-cat-table/income-cat-table.component.ts","./src/app/table/income-cat-table/income-cat-table.component.html","./src/app/calculator/calculator.component.ts","./src/app/calculator/calculator.component.html","./src/app/components/user-registration/user-registration.component.ts","./src/app/components/user-registration/user-registration.component.html","./src/app/components/create-page/create-page.component.ts","./src/app/components/create-page/create-page.component.html","./src/app/service/data/bank-book.service.ts","./src/app/components/diary/diary.component.ts","./src/app/components/diary/diary.component.html","./src/app/service/data/income.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/user-profile/user-profile.component.ts","./src/app/components/user-profile/user-profile.component.html","./src/app/service/data/cash-book.service.ts","./src/app/service/data/income-category.service.ts","./src/app.constants.ts","./src/app/service/http/route-guard.service.ts","./src/app/app.module.ts","./src/app/components/income-categories/income-categories.component.ts","./src/app/components/income-categories/income-categories.component.html","./src/app/service/data/day-book.service.ts","./src/app/service/data/diary.service.ts","./src/app/components/bank-book/bank-book.component.ts","./src/app/components/bank-book/bank-book.component.html","./src/app/components/income/income.component.ts","./src/app/components/income/income.component.html","./src/app/service/data/balance-sheet.service.ts","./src/app/components/login-component/login-component.component.ts","./src/app/components/login-component/login-component.component.html","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/components/day-book/day-book.component.ts","./src/app/components/day-book/day-book.component.html","./src/app/service/data/expense-category.service.ts","./src/app/components/reset-password/reset-password.component.ts","./src/app/components/reset-password/reset-password.component.html","./src/app/components/balance-sheet/balance-sheet.component.ts","./src/app/components/balance-sheet/balance-sheet.component.html","./src/app/service/data/user.service.ts","./src/app/app-routing.module.ts","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/main.ts","./src/app/service/data/expense.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-rsidebar',\n  templateUrl: './rsidebar.component.html',\n  styleUrls: ['./rsidebar.component.css']\n})\nexport class RsidebarComponent implements OnInit {\n  \n  constructor( ) { }\n\n\n  ngOnInit(): void {\n    \n  }\n\n\n\n}\n","<aside class=\"control-sidebar\" style=\"width:405px; margin-top: 290px;\">\n    <ul class=\"nav nav-treeview\">\n        <li class=\"nav-item\">\n            <app-calculator></app-calculator>\n        </li>\n    </ul>\n\n</aside>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\ndeclare var $: any;\n//import { AccountService } from './_services';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  progressInfos: [];\n  selectedFiles: FileList;\n  profilePhoto: string;\n  i = 1;\n  @ViewChild(\"imageName\") imageName: ElementRef;\n  selectFiles(event): void {\n    this.progressInfos = [];\n    this.selectedFiles = event.target.files;\n  }\n\n  constructor(private basicAuthService : BasicAuthService, private router : Router, private userService : UserService) {\n\n   }\n\n  ngOnInit(): void { \n  $(document).ready(function(){\n    // Prepare the preview for profile picture\n        $(\"#selectedFiles\").change(function(this: typeof readURL ){\n            readURL(this);\n        });\n    });\n    function readURL(input : any) {\n      if (input.files && input.files[0]) {\n          var reader = new FileReader();\n    \n          reader.onload = function (e): void {\n              $('#wizardPicturePreview').attr('src', e.target!.result).fadeIn('slow');\n          }\n          reader.readAsDataURL(input.files[0]);\n      }\n    }\n    $('a').on('click', function(){\n      $('a').removeClass('selected');\n      $(this).addClass('selected');\n  });\n this.executeFindProfilePhoto();\n  }\n\n  executeSaveProfilePhoto() {\n    this.userService.executeupdateProfilePhoto(this.basicAuthService.getAccountAuthenticatedUserId(), this.selectedFiles[0]).subscribe(\n      () => {\n\n      }\n    )\n  }\n\n  onChange(event) {\n    var fileName = this.imageName.nativeElement.value\n    var idxDot = fileName.lastIndexOf(\".\") + 1;\n    var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n    if (!(extFile==\"jpg\" || extFile==\"jpeg\" || extFile==\"png\"))\n        alert(\"Only jpg/jpeg and png files are allowed!\");\n    this.selectedFiles = event.srcElement.files\n    this.executeSaveProfilePhoto();\n\n}\n\nexecuteFindProfilePhoto() {\n  this.userService.executeFindProfilePhoto(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n    (res)=> {\n      this.profilePhoto = 'data:image/jpeg;base64,' + res;\n    }\n  )\n}\n\n\n\n\n\n\ndataURItoBlob(dataURI) {\n\n  var byteString;\n  if (dataURI.split(',')[0].indexOf('base64') >= 0)\n      byteString = atob(dataURI.split(',')[1]);\n  else\n      byteString = unescape(dataURI.split(',')[1]);\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n  var ia = new Uint8Array(byteString.length);\n  for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ia], {type:mimeString});\n}\n\n  logout() {\n    this.basicAuthService.logout();\n    window.history.pushState({}, document.title, \"/\" + \"#\");\n}\n}\n","<nav class=\"main-header navbar navbar-expand\" style=\"margin-left: 0%;\">\n\n    <ul class=\"navbar-nav pt5\">\n        <li class=\"nav-item \" style=\"padding-top: 13.5px;\">\n            <a class=\"nav-link menu\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\n                Menu\n            </a>\n        </li>\n\n        <li class=\"nav-item pt5 fullWidthHome\">\n            <a routerLink=\" \" class=\"nav-link pt5\">\n                Home\n            </a>\n        </li>\n        <li class=\"nav-item pt5\">\n            <a routerLink=\"userprofile\" class=\"nav-link pt5\">\n                Profile\n            </a>\n        </li>\n        <li class=\"nav-item pt5\">\n            <a role=\"button\"  class=\"nav-link text-white pt5\" (click)=\"logout()\">\n               Logout\n            </a>\n        </li>\n    </ul>\n\n\n    <div class=\"d-flex justify-content-center center fullWidth\">\n\n        <h2 style=\"color:rgb(252, 248, 11);   font-weight: 400; margin-top: -0.2rem;\">Personal</h2>\n\n\n        <h3 style=\"color:rgb(245, 6, 6); margin-top: 0rem;  font-weight: 400;\">Account</h3>\n\n    </div>\n\n\n\n\n\n\n\n    <ul class=\"navbar-nav ml-auto\">\n\n        <li class=\"nav-item\" style=\"padding-top: 8px;\">\n            <a class=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\">\n                <i class=\"fa fa-calculator\" aria-hidden=\"true\"></i>\n            </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\">\n                <div class=\"user-panel  d-flex\">\n                    <div class=\"picture-container\">\n                        <div class=\"picture\" >\n                            <img  [src]=\"profilePhoto\" class=\"picture-src\" id=\"wizardPicturePreview\" title=\"\" >\n                            <input type=\"file\"  id=\"selectedFiles\" #imageName name=\"photo\" (change)=\"onChange($event)\" accept=\".jpg,.jpeg,.png\"/>\n                        </div>\n                    </div>\n\n                </div>\n            </a>\n        </li>\n    </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { CashBookService } from 'src/app/service/data/cash-book.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { Incomed } from '../day-book/day-book.component';\n\n@Component({\n  selector: 'app-cash-book',\n  templateUrl: './cash-book.component.html',\n  styleUrls: ['./cash-book.component.css']\n})\nexport class CashBookComponent implements OnInit {\n  from :Date;\n  to : Date;\n  details: Incomed[] = [] ;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  content :String;\n  content2 : String;\n closingBalance : number;\n\n  constructor(private service:CashBookService,\n    private basicAuthService : BasicAuthService) { }\n\n\n    ngOnInit(): void {\n      this.executeFindNetAmount();\n    }\n\n\n  headers = ['S NO.', 'Date', 'Amount', 'Pay/receive']\n  \n\n\nfindAllCashTransaction(from, to) {\n  this.service.executeFindAllCashTransactionBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(), from, to).subscribe(\n    (response : any) => {\n      this.details = response;\n      console.log(this.details);\n      this.dtTrigger.next();\n    }\n  );\n}\n\nexecuteFindNetAmount() {\n  this.service.executeFindNetAmount(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n    (response : any) => {\n      this.closingBalance = response;\n    }\n  );\n}\n\n  \n\n}\n","<div class=\"outer container-fluid\">\n    <div class=\"inner\">\n        <form #cashBook=\"ngForm\">\n            <table class=\"table table-bordered table-responsive-xl table-sm\">\n                <thead>\n                    <tr>\n                        <th style=\"width:8.5%;\">\n                            <h2 class=\"text-left fontCashBook\">Cash Book</h2>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">Date From </h4>\n                            <input class=\"sd \" type=\"date\" #selected_date_from=\"ngModel\" ngModel name=\"selected_date_from\" [(ngModel)]=\"from\" required/>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" [(ngModel)]=\"to\" required/>\n                        </th>\n                        <th class=\"button\">\n                            <button type=\"button\" (click)=\"findAllCashTransaction(from, to)\" [disabled]=\"cashBook.invalid\">\n                            <h4 class=\"text-white mb-0\">Show</h4>\n                        </button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th class=\"thHeading\" *ngFor=\"let column of headers \">\n                            <h4 class=\"text-white font mb-0\">\n                                {{column}}\n                            </h4>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr class=\"trRowDetail\" *ngFor=\"let detail of details; index as i; \">\n                        <td>\n                            {{i + 1}}\n                        </td>\n                        <td>\n                            {{detail[0]}}\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\" class=\"biColor\">\n                                + {{detail[1]}}\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\" class=\"colorRed\">\n                                - {{detail[1]}}\n                            </div>\n\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\">\n                                receive\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\">\n                                pay\n                            </div>\n                        </td>\n                    </tr>\n                    <tr class=\"bgBlack\">\n                        <td colspan=\"2 \">\n                            <h4 class=\"fontCashBook\">Closing Balance </h4>\n                        </td>\n\n                        <td colspan=\"2 \" class=\"closingBalance\">\n                            <h3 class=\"fontCashBook\">{{closingBalance}}</h3>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ExpenseCategoryService } from 'src/app/service/data/expense-category.service';\nimport { ExpenseService } from 'src/app/service/data/expense.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\nexport class Expense {\n  constructor(\n    public expenseId: number,\n    public expenseAccount: string,\n    public expenseCategoryId: number,\n    public amount: number,\n    public transDate: Date,\n    public receiveMode: string,\n    public remark: string,\n    public userId: number\n  ) { }\n\n  public getExpenseId(): number {\n    return this.expenseId;\n  }\n  public getExpenseAccount(): string {\n    return this.expenseAccount;\n  }\n\n  public getExpenseCategoryId(): number {\n    return this.expenseCategoryId;\n  }\n\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  public getTansDate(): Date {\n    return this.transDate;\n  }\n\n  public getReceiveMode(): string {\n    return this.receiveMode;\n  }\n\n  public getRemark(): string {\n    return this.remark;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n\n}\n\n@Component({\n  selector: 'app-expense',\n  templateUrl: './expense.component.html',\n  styleUrls: ['./expense.component.css']\n})\nexport class ExpensesComponent implements OnInit {\n  expense: Expense;\n  details: ExpenseCategories[] = [];\n  message: string;\n  spinner_status: number = 0;\n  constructor(private expenseService: ExpenseService, private serviceCatSerice: ExpenseCategoryService, private basicAuthService: BasicAuthService) {\n    this.expense = new Expense(0, '', 2, 0, null, 'CE', '', basicAuthService.getAccountAuthenticatedUserId());\n  }\n\n  refreshAllCategories() {\n    this.serviceCatSerice.executeFindAllExpenseCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      response => {\n        this.details = response;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n  }\n\n  saveExpense(expenseForm) {\n    this.spinner_status = 1;\n    this.expenseService.executeSaveExpense(this.expense).subscribe(\n      () => {\n        this.spinner_status = 0\n        this.message = 'Expense Addition Successful';\n        expenseForm.reset();\n      }\n    );\n  }\n}","<section class=\"content\" *ngIf='message'>\n\n    <div class=\"card card-success\">\n        <div class=\"card-header\">\n            <h3 class=\"card-title text-center\"> {{message}}</h3>\n            <div class=\"card-tools\">\n                <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n                    <i class=\"fas fa-times\"></i></button>\n            </div>\n        </div>\n    </div>\n</section>\n<div class=\"container-fluid wrapper text-black font-weight-bold\">\n    <div class=\"container \">\n        <p class=\"pt-2 pb-1 heading\">Expense</p>\n    </div>\n    <form action=\"\" #expenseForm=\"ngForm\">\n        <div class=\"row  form-group\">\n            <br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Expense<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #expenseref=\"ngModel\" ngModel [(ngModel)]='expense.expenseAccount' name=\"expense\" placeholder=\"expense\" required [ngClass]=\"{'form-control': true, \n                   'is-invalid': !expenseref?.valid && expenseref?.touched,  \n                   'is-valid': expenseref?.valid && expenseref?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"expenseref?.errors?.required && expenseref?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"expenseref?.errors?.minlength && expenseref?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n        <h4>Category<sup class=\"color\">*</sup></h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n\n\n                <select id=\"inputState\" class=\"form-control\" ngModel [(ngModel)]=\"expense.expenseCategoryId\" #expenseCategoryId=\"ngModel\" required name=\"incomCategoryId\" id=\"incomCategoryId\" [ngClass]=\"{'form-control' : true,\n          'is-invalid' : !expenseCategoryId?.valid && expenseCategoryId?.touched,\n          'is-valid' : expenseCategoryId?.valid && expenseCategoryId?.touched}\">\n          <option *ngFor=\"let detail of details\" value='{{detail.expenseCategoryId}}'>{{detail.expenseCategoryName}}</option>\n      </select>\n\n                <small *ngIf=\"expenseCategoryId?.errors?.required && expenseCategoryId?.touched\" class=\"form-text custom-invalid-feedback color\">Category is not selected</small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg- 6 pl-5 form-group\">\n                <label for=\"fntext\"> \n        <h4>Amount<sup class=\"color\">*</sup></h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n                <input type=\"text\" placehoder=\"Amount\" #annualref=\"ngModel\" ngModel [(ngModel)]='expense.amount' name=\"annual\" required [ngClass]=\"{'form-control': true }\" />\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col  col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\">\n                <h4>Date<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"date\" ngModel [(ngModel)]='expense.transDate' required placeholder=\"from\" name=\"from_date\" id=\"from_date\" #from_date=\"ngModel\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !from_date?.valid && from_date?.touched,  \n                'is-valid': from_date?.valid && from_date?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.required && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.minlength && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n        <h4>Remark<sup class=\"color\">*</sup></h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"text\" #remarkref=\"ngModel\" ngModel [(ngModel)]='expense.remark' name=\"remark\" required placeholder=\"remark\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !remarkref?.valid && remarkref?.touched,  \n                'is-valid': remarkref?.valid && remarkref?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.required && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.minlength && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Remark requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group \" style=\"margin-top: -2%;\">\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n        <h4>ReceiveMode</h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6\">\n                <div class=\" form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n            <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]=\"expense.receiveMode\" value=\"CE\">Cash Receipt\n          </label></h4>\n                </div>\n                <div class=\"form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n            <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]=\"expense.receiveMode\" value=\"BE\"> Bank Receipt\n          </label></h4>\n                </div>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between mrt-4\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\">\n                <h4 class=\"mt-o mb-0 btnText\" routerLink=\" \">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"saveExpense(expenseForm)\" [disabled]=\"expenseForm.invalid\">\n              <h4 class=\"mt-o mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h4>\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExpenseCategoryService } from 'src/app/service/data/expense-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\n@Component({\n  selector: 'app-expense-categories',\n  templateUrl: './expense-categories.component.html',\n  styleUrls: ['./expense-categories.component.css']\n})\n\n\n\nexport class ExpenseCategoriesComponent implements OnInit {\n  expenseCategory: ExpenseCategories;\n  expenseCategoryId: number;\n  spinner_status: number = 0;\n  constructor(private route: ActivatedRoute, private service: ExpenseCategoryService, private router: Router, private basicAuthService : BasicAuthService) {\n    this.expenseCategory = new ExpenseCategories(0, '', '',basicAuthService.getAccountAuthenticatedUserId());\n    this.expenseCategoryId = this.route.snapshot.params['expenseCategoryId'];\n\n    if (this.expenseCategoryId != 0) {\n      this.service.executeFindExpenseCategory(this.expenseCategoryId).subscribe(\n        response => {\n          this.expenseCategory = response;\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n  }\n  saveExpenseCategory(expenseCategoryForm) {\n    this.spinner_status = 1;\n    if (this.expenseCategoryId != 0) {\n      this.service.executeUpdateExpenseCategory(this.expenseCategoryId, this.expenseCategory).subscribe(\n        () => {\n          this.spinner_status = 0;\n          this.router.navigate(['expensescategory']);\n          expenseCategoryForm.reset()\n        }\n      );\n    }\n    else {\n      this.service.executeSaveExpenseCategory(this.expenseCategory).subscribe(\n        () => {\n          this.router.navigate(['expensescategory']);\n\n        }\n      );\n\n    }\n\n  }\n}\n","<div class=\"container-fluid  pt-0 font-weight-bold\">\n    <section class=\"content  pt-1 text-center\">\n        <h1 class=\"heading\">Expenses Categories</h1>\n    </section>\n    <form action=\"\" #expenseCategoryForm=\"ngForm\">\n        <div class=\"row  form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Name<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n                <input type=\"text\" ngModel [(ngModel)]='expenseCategory.expenseCategoryName' required minlength=\"3\" placeholder=\"Enter Name\" name=\"po\" id=\"fntext\" #bindname=\"ngModel\" [ngClass]=\"{'form-control': true, \n         'is-invalid': !bindname?.valid && bindname?.touched,  \n         'is-valid': bindname?.valid && bindname?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.required && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.minlength && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 3 characters.</small>\n                <BR>\n\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Detail<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n                <textarea ngModel required rows=\"2\" cols=\"50\" minlength=\"5\"   [(ngModel)]='expenseCategory.expenseCategoryDetails' #category=\"ngModel\" name=\"catdetail\" placeholder=\"Enter Categorie Detail\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !category?.valid && category?.touched,  \n                'is-valid': category?.valid && category?.touched}\"></textarea>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.required && category?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required\n                </small>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.minlength && category?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 5 characters.\n                </small><BR>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between \">\n            <button type=\"button\" class=\"btn btn-sm btn-md btncancel btn-xs btn-lg\">\n                <h3 class=\"mt-0 mb-0 btnText\" routerLink=\" \">Cancel</h3>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm btn-md  btn-xs btn-lg\" (click)=\"saveExpenseCategory(expenseCategoryForm)\" [disabled]=\"expenseCategoryForm.invalid\">\n                <h3 class=\"mt-0 mb-0 btnText\"> <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h3>\n            </button>\n        </div>\n    </form>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { APP_URL } from 'src/app.constants';\nimport { map } from 'rxjs/operators';\n\nexport const ACCOUNT_AUTHENTICATED_USER = 'account_authenticatedUser';\nexport const ACCOUNT_TOKEN = 'account_user_token';\nexport const ACCOUNT_PAGE_ID = 'account_user_pageId';\nexport const ACCOUNT_USER_ID = 'account_user_userId';\n\nexport class AuthenticationBean {\n  constructor(public userId: number) { }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BasicAuthService {\n\n  constructor(private http: HttpClient) { }\n\n  executeAuthencationService(username, password) {\n    let basicAuthHeaderString = 'Basic ' + window.btoa(username + \":\" + password);\n    let headers = new HttpHeaders(\n      {\n        Authorization: basicAuthHeaderString\n      }\n    );\n    return this.http.get<AuthenticationBean>(`${APP_URL}/user/basicauth`, { headers }).pipe(\n      map(\n        data => {\n          localStorage.setItem(ACCOUNT_USER_ID, \"\" + data.userId);\n          localStorage.setItem(ACCOUNT_AUTHENTICATED_USER, username);\n          localStorage.setItem(ACCOUNT_TOKEN, basicAuthHeaderString);\n          return data;\n        }\n      )\n    );\n  }\n\n  getAccountAuthenticatedUserId(): number {\n    return parseInt(localStorage.getItem(ACCOUNT_USER_ID));\n  }\n\n  getAccountAuthenticatedUser() {\n    return localStorage.getItem(ACCOUNT_AUTHENTICATED_USER);\n  }\n\n  getAccountAuthenticatedToken() {\n     return localStorage.getItem(ACCOUNT_TOKEN);\n  }\n\n  isAccountUserLoggedIn() {\n    let user = localStorage.getItem(ACCOUNT_AUTHENTICATED_USER);\n    return !(user == null);\n  }\n\n  logout() {\n    localStorage.removeItem(ACCOUNT_AUTHENTICATED_USER);\n    localStorage.removeItem(ACCOUNT_TOKEN);\n    localStorage.removeItem(ACCOUNT_PAGE_ID);\n    localStorage.removeItem(ACCOUNT_USER_ID);\n  }\n\n  AccountPageId(): string {\n    var pageId = localStorage.getItem(ACCOUNT_PAGE_ID);\n    if (pageId === null) {\n      localStorage.setItem(ACCOUNT_PAGE_ID, 'login');\n    }\n    return pageId;\n  }\n\n  setAccountPageId(pageId: string) {\n    localStorage.setItem(ACCOUNT_PAGE_ID, pageId);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { ExpenseCategoryService } from 'src/app/service/data/expense-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\nexport class ExpenseCategories {\n\n  constructor(\n    public expenseCategoryId: number,\n    public expenseCategoryName: string,\n    public expenseCategoryDetails: string,\n    public userId: number\n  ) { }\n\n  public getExpenseCategoryId(): number {\n    return this.expenseCategoryId;\n  }\n  public getExpenseCategoryName(): string {\n    return this.expenseCategoryName;\n  }\n  public getExpenseCategoryDetails(): string {\n    return this.expenseCategoryDetails;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n}\n\n@Component({\n  selector: 'app-expense-cat-table',\n  templateUrl: './expense-cat-table.component.html',\n  styleUrls: ['./expense-cat-table.component.css']\n})\n\nexport class ExpenseCatTableComponent implements OnInit {\n \n  \n  message: string;\n  details: ExpenseCategories[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n\n  constructor(private service: ExpenseCategoryService, private router: Router, private basicAuthService: BasicAuthService) {\n\n  }\n  refreshAllCategories() {\n    this.service.executeFindAllExpenseCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (response: any) => {\n        this.details = response;\n        this.dtTrigger.next();\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      lengthMenu: [5, 10, 15, 20]\n    };\n\n\n\n  }\n\n  deleteExpenseCategory(expenseCategoryId) {\n    this.service.executeDeleteCategory(expenseCategoryId).subscribe(\n      () => {\n        this.refreshAllCategories();\n        this.message = 'Deleted Expense Category ' + expenseCategoryId;\n      }\n    );\n  }\n\n  updateExpenseCategory(expenseCategoryId) {\n    this.router.navigate(['expenseCatForm', expenseCategoryId]);\n  }\n\n  addNewExpenseCategory() {\n    this.router.navigate(['expenseCatForm', 0]);\n  }\n\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n}\n\n\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <div class=\"d-flex justify-content-center floattop sticky-top \">\n            <h1 class=\"mt mb pt-1 pb-1\">Expense Categories</h1>\n            <button type=\"button\" class=\"btn btnfixed\" (click)=\"addNewExpenseCategory()\">\n                <h4 class=\"newCategory\">New Category</h4></button>\n        </div>\n        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-bordered table-sm table-striped\">\n            <thead style=\"background-color:  rgb(0, 0, 0);\">\n                <tr>\n                    <th>\n                        <h3 class=\"mb-0 mth color\">Category Name</h3>\n                    </th>\n                    <th>\n                        <h3 class=\"mth mb-0 color\">Category Details</h3>\n                    </th>\n                    <th>\n                        <h3 class=\"mth mb-0 color\">Action</h3>\n                    </th>\n\n                </tr>\n            </thead>\n            <tbody>\n\n                <tr *ngFor=\"let detail of details\" style=\"height:2px; padding-top: 0.5rem; padding-bottom: -10rem;\">\n                    <td>{{detail.expenseCategoryName}}</td>\n                    <td>{{detail.expenseCategoryDetails}}</td>\n                    <td style=\"line-height: 0.6rem;\">\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(77, 255, 7); padding-bottom: 0rem;  margin-top:-0.8rem; margin-bottom: -0.2rem;\" (click)=\"updateExpenseCategory(detail.expenseCategoryId)\">Edit</button> &nbsp;\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(255, 7, 7); padding-bottom: 0rem; margin-top: -2rem; margin-bottom: -1.5rem; \" (click)=\"deleteExpenseCategory(detail.expenseCategoryId)\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n            <tfoot>\n                <tr>\n                    <th>Category Name</th>\n                    <th>category Details</th>\n                    <th></th>\n                </tr>\n            </tfoot>\n        </table>\n\n\n\n\n\n    </div>\n\n</div>","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BasicAuthService } from '../http/basic-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpIntercepterBasicAuthService implements HttpInterceptor {\n\n  constructor(private basicAuthService: BasicAuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n\n    let basicAuthHeaderString = this.basicAuthService.getAccountAuthenticatedToken();\n    let username = this.basicAuthService.getAccountAuthenticatedUser();\n    if (basicAuthHeaderString && username) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: basicAuthHeaderString\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { IncomeCategoryService } from 'src/app/service/data/income-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nexport class IncomeCategories {\n\n  constructor(\n    public incomeCategoryId: number,\n    public incomeCategoryName: string,\n    public incomeCategoryDetails: string,\n    public userId: number\n  ) { }\n\n  public getIncomeCategoryId(): number {\n    return this.incomeCategoryId;\n  }\n  public getIncomeCategoryName(): string {\n    return this.incomeCategoryName;\n  }\n  public getIncomeCategoryDetails(): string {\n    return this.incomeCategoryDetails;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n}\n@Component({\n  selector: 'app-income-cat-table',\n  templateUrl: './income-cat-table.component.html',\n  styleUrls: ['./income-cat-table.component.css']\n})\n\nexport class IncomeCatTableComponent implements OnInit {\n\n  message: string;\n  details: IncomeCategories[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  constructor(private service: IncomeCategoryService, private router: Router, private basicAuthService: BasicAuthService) {\n\n  }\n  refreshAllCategories() {\n    this.service.executeFindAllIncomeCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (response: any) => {\n        this.details = response;\n        console.log(response)\n        this.dtTrigger.next();\n      }\n    );\n\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      lengthMenu: [5, 10, 15, 20]\n    };\n  }\n  deleteIncomeCategory(incomeCategoryId) {\n    this.service.executeDeleteCategory(incomeCategoryId).subscribe(\n      () => {\n        this.refreshAllCategories();\n        this.message = 'Deleted Income Category ' + incomeCategoryId;\n      }\n    );\n  }\n\n  updateIncomeCategory(incomeCategoryId) {\n    this.router.navigate(['incomeCatForm', incomeCategoryId]);\n  }\n\n  addNewIncomeCategory() {\n    this.router.navigate(['incomeCatForm', 0]);\n  }\n\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n}\n\n\n\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <div class=\"d-flex justify-content-center floattop sticky-top \">\n            <h1 class=\"mt mb pt-1 pb-1\">Income Categories</h1>\n            <button type=\"button\" class=\"btn btnfixed\" (click)=\"addNewIncomeCategory()\">\n                <h4 class=\"newCategory\">New Category</h4>\n            </button>\n        </div>\n        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-bordered table-sm table-striped\">\n            <thead style=\"background-color:  rgb(0, 0, 0);\">\n                <tr>\n                    <th class=\"tableHeading\">\n                        <h3 class=\"mth mb-0 \">Category Name</h3>\n                    </th>\n                    <th class=\"tableHeading\">\n                        <h3 class=\"mth mb-0\"> Category Details</h3>\n                    </th>\n                    <th>\n                        <h3 class=\"mth mb-0\">Action</h3>\n                    </th>\n\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let detail of details\" style=\"height:2px; padding-top: 0.5%; padding-bottom: -10%;\">\n                    <td class=\"color\">{{detail.incomeCategoryName}}</td>\n                    <td class=\"color\">{{detail.incomeCategoryDetails}}</td>\n                    <td style=\"line-height: 0.6rem;\">\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(77, 255, 7); padding-bottom: 0rem;  margin-top:-0.8rem; margin-bottom: -0.2rem;\" (click)=\"updateIncomeCategory(detail.incomeCategoryId)\">Edit</button> &nbsp;\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(255, 7, 7); padding-bottom: 0rem; margin-top: -2rem; margin-bottom: -1.5rem; \" (click)=\"deleteIncomeCategory(detail.incomeCategoryId)\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n            <tfoot>\n                <tr>\n                    <th>Category Name</th>\n                    <th>category Details</th>\n                    <th></th>\n                </tr>\n            </tfoot>\n        </table>\n\n\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css']\n})\nexport class CalculatorComponent implements OnInit {\n\n  currentNumber = '0';\n  firstOperand = null;\n  operator = null;\n  waitForSecondNumber = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public getNumber(v: string){\n    console.log(v);\n    if(this.waitForSecondNumber)\n    {\n      this.currentNumber = v;\n      this.waitForSecondNumber = false;\n    }else{\n      this.currentNumber === '0'? this.currentNumber = v: this.currentNumber += v;\n\n    }\n  }\n\n  getDecimal(){\n    if(!this.currentNumber.includes('.')){\n        this.currentNumber += '.'; \n    }\n  }\n\n  private doCalculation(op , secondOp){\n    switch (op){\n      case '+':\n      return this.firstOperand += secondOp; \n      case '-': \n      return this.firstOperand -= secondOp; \n      case '*': \n      return this.firstOperand *= secondOp; \n      case '/': \n      return this.firstOperand /= secondOp; \n      case '=':\n      return secondOp;\n    }\n  }\n  public getOperation(op: string){\n    console.log(op);\n\n    if(this.firstOperand === null){\n      this.firstOperand = Number(this.currentNumber);\n\n    }else if(this.operator){\n      const result = this.doCalculation(this.operator , Number(this.currentNumber))\n      this.currentNumber = String(result);\n      this.firstOperand = result;\n    }\n    this.operator = op;\n    this.waitForSecondNumber = true;\n\n    console.log(this.firstOperand);\n \n  }\n\n  public clear(){\n    this.currentNumber = '0';\n    this.firstOperand = null;\n    this.operator = null;\n    this.waitForSecondNumber = false;\n  }\n}\n","<div class=\"calculator container\">\n\n\n    <div class=\"display-container\">\n        <p class=\"casio\">CASIO</p>\n        <div class=\"solar\">\n\n        </div>\n        <span class=\"model\"><i>fx</i>-85MS</span>\n    </div>\n\n\n\n    <input type=\"text\" class=\"calculator-screen\" [value]=\"currentNumber\" disabled />\n\n    <div class=\"calculator-keys\">\n\n        <button type=\"button\" (click)=\"getOperation('+')\" class=\"operator\" value=\"+\">+</button>\n        <button type=\"button\" (click)=\"getOperation('-')\" class=\"operator\" value=\"-\">-</button>\n        <button type=\"button\" (click)=\"getOperation('*')\" class=\"operator\" value=\"*\">&times;</button>\n        <button type=\"button\" (click)=\"getOperation('/')\" class=\"operator\" value=\"/\">&#247;</button>\n\n        <button type=\"button\" (click)=\"getNumber('7')\" value=\"7\">7</button>\n        <button type=\"button\" (click)=\"getNumber('8')\" value=\"8\">8</button>\n        <button type=\"button\" (click)=\"getNumber('9')\" value=\"9\">9</button>\n\n\n        <button type=\"button\" (click)=\"getNumber('4')\" value=\"4\">4</button>\n        <button type=\"button\" (click)=\"getNumber('5')\" value=\"5\">5</button>\n        <button type=\"button\" (click)=\"getNumber('6')\" value=\"6\">6</button>\n\n\n        <button type=\"button\" (click)=\"getNumber('1')\" value=\"1\">1</button>\n        <button type=\"button\" (click)=\"getNumber('2')\" value=\"2\">2</button>\n        <button type=\"button\" (click)=\"getNumber('3')\" value=\"3\">3</button>\n\n\n        <button type=\"button\" (click)=\"getNumber('0')\" value=\"0\">0</button>\n        <button type=\"button\" (click)=\"getDecimal()\" class=\"decimal\" value=\".\">.</button>\n        <button type=\"button\" (click)=\"clear()\" class=\"all-clear\" value=\"all-clear\">AC</button>\n\n        <button type=\"button\" (click)=\"getOperation('=')\" class=\"equal-sign\" value=\"=\">=</button>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { LoginComponentComponent } from '../login-component/login-component.component';\n\n\nexport class User {\n  constructor(\n    public userId: number,\n    public userName: String,\n    public password: String,\n    public recoveryEmail: String,\n    public name: String,\n    public address: String,\n    public mobileNo: number,\n    public isAdmin: boolean,\n    public profile_photo : File,\n    public amount: number\n  ) { }\n  public getUserId(): number {\n    return this.userId;\n  }\n  public getUserName(): String {\n    return this.userName;\n  }\n  public getPassword(): String {\n    return this.password;\n  }\n  public getName(): String {\n    return this.name;\n  }\n  public getAddress(): String {\n    return this.address;\n  }\n  public getMobileNumber(): number {\n    return this.mobileNo;\n  }\n  public getRecoveryEmail(): String {\n    return this.recoveryEmail;\n  }\n  public getIsAdmin(): Boolean {\n    return this.isAdmin;\n  }\n  public getProfilePhoto(): File {\n    return this.profile_photo;\n  }\n  public getAmount(): number {\n    return this.amount;\n  }\n}\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent implements OnInit {\n  user: User;\n  userId : number;\n  message: String;\n  spinner_status : number = 0;\n  constructor(private userService: UserService, private router: Router, private basicAuthService: BasicAuthService\n    ,private route: ActivatedRoute ) \n  {\n    this.user = new User(0, '', '', '', '', '', null, true, null, 0);\n    this.userId = this.route.snapshot.params['userId'];\n   }\n\n  ngOnInit(): void {\n  }\n\n  saveUser(registration) {\n    this.spinner_status = 1;\n    if(this.userId != 0 ) {\n    this.userService.executeSaveUser(this.user).subscribe(\n      () => {\n        this.spinner_status = 0;\n        this.message = 'Registration Successful';\n        registration.reset();\n        this.basicAuthService.setAccountPageId('login');\n      },\n      _error => {\n       if(_error.status == 302)\n       {\n        this.spinner_status = 0;\n         alert(\" user name is already registered\")\n         \n       }\n       else if(_error.status == 417)\n       {\n        this.spinner_status = 0;\n          alert(\"email Id is already registered\")\n          \n       }\n      });\n    }\n  }\n  cancelUser() {\n    this.basicAuthService.setAccountPageId('login');\n  }\n}\n","<div class=\"container-fluid font-weight-bold\">\n    <section class=\"content\" *ngIf='message'>\n        <div class=\"card card-success\">\n            <div class=\"card-header\">\n                <h3 class=\"card-title text-center\"> {{message}}</h3>\n                <div class=\"card-tools\">\n                    <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </section>\n    <div class=\"container\">\n        <h2 class=\"pt-2 pb-0 header\">User Registration</h2>\n    </div>\n    <form action=\"\" #registration=\"ngForm\">\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>User Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #user_name=\"ngModel\" ngModel [(ngModel)]='user.userName' pattern=\"[a-zA-Z0-9_]{5,15}$\" name=\"user_name\" placeholder=\"User Name\"  required [ngClass]=\"{'form-control': true, \n                 'is-invalid': !user_name?.valid && user_name?.touched,  \n                 'is-valid': user_name?.valid && user_name?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"user_name?.errors?.required && user_name?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"user_name?.errors?.pattern && user_name?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 5 and maximum 15 characters and character may be upper leeter, small letter digit and underscore.</small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #name=\"ngModel\" ngModel [(ngModel)]='user.name' name=\"name\" placeholder=\"Name\" minlength=\"2\" required [ngClass]=\"{'form-control': true, \n                    'is-invalid': !name?.valid && name?.touched,  \n                    'is-valid': name?.valid && name?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.required && name?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.minlength && name?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Address<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #address=\"ngModel\" ngModel [(ngModel)]='user.address' name=\"address\" placeholder=\"Address\" required minlength=\"10\" [ngClass]=\"{'form-control': true, \n           'is-invalid': !address?.valid && address?.touched,  \n           'is-valid': address?.valid && address?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.required && address?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.minlength && address?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 10 characters. </small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Mobile Number<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 co col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #mobile=\"ngModel\" ngModel [(ngModel)]='user.mobileNo' name=\"mobile\" pattern=\"[6789][0-9]{9}\" placeholder=\"mobile number\" required [ngClass]=\"{'form-control': true, \n                    'is-invalid': !mobile?.valid && mobile?.touched,  \n                    'is-valid': mobile?.valid && mobile?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.required && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.pattern && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid mobile number.</small>\n            </div>\n        </div>\n        <br>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n                    <h4>Email<sup class=\"color\">*</sup></h4>\n                </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"email\" #email=\"ngModel\" ngModel [(ngModel)]='user.recoveryEmail' name=\"email\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"email\" [ngClass]=\"{'form-control': true, \n                    'is-invalid': !email?.valid && email?.touched,  \n                    'is-valid': email?.valid && email?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.required && email?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.pattern && email?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid email</small>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\"><h4>Password<sup class=\"color\">*</sup></h4></label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"password\" #password=\"ngModel\"  name=\"password\" ngModel [(ngModel)]=\"user.password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n                    pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" [ngClass]=\"{ 'form-control': true,\n                    'is-invalid': !password?.valid && password?.touched,  \n                    'is-valid': password?.valid && password?.touched }\" required/>\n                <small *ngIf=\"password?.errors?.required && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Field is required</small>\n                <small *ngIf=\"password?.errors?.pattern && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n            </div>\n        </div>  \n        <div class=\"d-flex justify-content-between\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\" (click)=\"cancelUser()\">\n                <h4 class=\"mt-o mb-0 btnText\">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"saveUser(registration)\" [disabled]=\"registration.invalid\">\n                <h4 class=\"mt-o mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Register</h4>\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Diary, DiaryService } from 'src/app/service/data/diary.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-create-page',\n  templateUrl: './create-page.component.html',\n  styleUrls: ['./create-page.component.css']\n})\nexport class CreatePageComponent implements OnInit {\n\n  diary : Diary\n  message : String;\n  spinner_status = 0;\n  constructor(private diaryService : DiaryService, private basicAuthService : BasicAuthService) {\n    this.diary = new Diary('', '', this.basicAuthService.getAccountAuthenticatedUserId());\n   }\n  saveDiary(createPage) {\n    this.message;\n    this.spinner_status = 1;\n    this.diaryService.executeSaveNotes(this.diary).subscribe(\n      ()=>  {\n        this.message = \"notes saved successfully\";\n        createPage.reset();\n        this.spinner_status = 0;\n      }\n    )\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content-wrapper\">\n  \n    <form #createPage=\"ngForm\">\n        <div class=\"card\">\n            <h1 class=\"text-center\"><span>Create</span> <span class=\"heading\">  Notes</span></h1>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"comment-box ml-2\">\n                        <div class=\"comment-area\"> <textarea class=\"form-control\" #heading=\"ngModel\" ngModel  name=\"heading\" placeholder=\"heading\" [(ngModel)]=\"diary.notes_heading\" rows=\"3\" minlength=\"5\" required></textarea> </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"comment-box ml-2\">\n                        <div class=\"comment-area\"> <textarea class=\"form-control\" #detail=\"ngModel\" ngModel  name=\"detail\" placeholder=\"detail\" [(ngModel)]=\"diary.notes_detail\" rows=\"6\" minlength=\"5\" required></textarea> </div>\n                        <div class=\"comment-btns mt-2\">\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                </div>\n                                <div class=\"col-6\">\n                                    <div class=\"pull-right\"> <button class=\"btn btn-success btn-block\" (click)=\"saveDiary(createPage)\" [disabled]=\"createPage.invalid\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Save <i class=\"fa fa-long-arrow-right ml-1\"></i></button> </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n\n  </div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BankBookService {\n\n  constructor(\n    private http :HttpClient\n  ) { }\n\n  executeFindAllBankTransactionBetweenDate(id, from, to) {\n    return this.http.get<any[]>(`${APP_URL}/bank/${id}/${from}/to/${to}`);\n  }\n\n  executeFindNetAmount(userId) {\n    return this.http.get<Object>(`${APP_URL}/netAmount/${userId}`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Comment, DiaryService } from 'src/app/service/data/diary.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-diary',\n  templateUrl: './diary.component.html',\n  styleUrls: ['./diary.component.css']\n})\nexport class DiaryComponent implements OnInit {\n  user_notes : any[] = [];\n  user_comments : any[] = [];\n  userComment : Comment;\n  spinner_status = 0;\n  constructor(private diaryService : DiaryService, private basicAuthService : BasicAuthService) { \n    this.userComment = new Comment('', 0);\n  }\n\n  ngOnInit(): void {\n    this.getAllNotes();\n  }\n\n  getAllNotes() {\n    this.diaryService.executeFindAllUser_Notes(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (res) => {\n          this.user_notes = res;\n          if(this.user_notes.length === 0)\n            this.spinner_status = 2;\n      }\n    )\n  }\n  showComment(diaryId) {\n    this.diaryService.executeFindAllUser_CommentsBYnotes_id(diaryId).subscribe(\n      (res) => {\n          this.user_comments = res;\n      }\n    )\n  }\n  saveComment(id, userCommentOnPage) {\n    this.spinner_status = 1;\n    this.userComment.diary_id = id;\n    this.diaryService.executeSaveUserComment(this.userComment).subscribe(\n      () => {\n        this.showComment(id);\n        userCommentOnPage.reset();\n        this.spinner_status = 0;\n      }\n    )\n  }\n  deleteNote(diary_id) {\n    this.diaryService.executeDeleteNote(diary_id).subscribe(\n      () =>  {\n        this.getAllNotes();\n      }\n    )\n  }\n\n}\n","<div id=\"commentGroup\">\n    <div class=\" card border-0 rounded-4 mb-1 mt-5 alert alert-warning\" *ngIf=\"spinner_status === 2\">\n        <div class=\"text-center text-warning\"><i class=\"icon fas fa-exclamation-triangle fa-3x\"></i></div>\n        <p class=\"text-warning text-center\">you have not any note now</p>\n    </div>\n    <div class=\"card rounded-4 mt-5 mb-1\" *ngFor=\"let user_note of user_notes; let i = index;\">\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <button type=\"button\" class=\"btn bg-white trash\" (click)=\"deleteNote(user_note.diary_id)\"><i class=\"fa fa-trash trash\"></i></button>\n            </div>\n            <div class=\"col-6\">\n        <p class=\"notes_date\">{{user_note.createDate}}</p>    \n    </div>\n        </div>\n        <hr style=\"margin-top: -0.5rem;\">\n        <div class=\"card-body\">\n            <h4 class=\"text-center heading\">{{user_note.notes_heading}}</h4>\n            <p class=\"notes_detail\">{{user_note.notes_detail}}</p>\n            \n        </div>\n        <div class=\"bg-white p-2\">\n            <div class=\"p-2 cursor\" data-toggle=\"collapse\" [attr.href]=\"'#collapse-' + i\" (click)=\"showComment(user_note.diary_id)\"><i class='far fa-comment  fa-2x' style=\"color: rgb(101, 214, 107);\"></i><span class=\"ml-1\">Comment</span></div><br>\n        </div>  \n  \n        <div class=\"collapse\" [attr.id]=\"'collapse-' + i\" data-parent=\"#commentGroup\">    \n            <div class=\"card border-0 rounded-0 mb-1\" style=\"box-shadow: 0px 8px 16px 0px white;\">\n              <form #commentForm=\"ngForm\">\n                <div class=\"d-flex flex-row align-items-start\">\n                    <textarea class=\"ml-1 shadow-none textarea\" name=\"comment\" required minlength=\"5\" ngModel [(ngModel)]=\"userComment.user_comment\" #comment=\"ngModel\" placeholder=\"Enter your Comment\"\n                    [ngClass]=\"{'form-control': true, \n                    'is-invalid': !comment?.valid && comment?.touched}\"></textarea>\n               </div>\n               <small id=\"f\" *ngIf=\"comment?.errors?.required && comment?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required </small>\n                    <small id=\"f\" *ngIf=\"comment?.errors?.minlength && comment?.touched\" class=\"form-text custom-invalid-feedback color\">comment requires atleast 5 characters.</small>\n\n                <div class=\"mt-2 text-right\"><button class=\"btn btn-primary btn-sm shadow-none\" type=\"button\" [disabled]=\"commentForm.invalid\" (click)=\"saveComment(user_note.diary_id, commentForm)\"> <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Post comment</button></div><br>\n              </form>\n              <div class=\"row\" *ngFor=\"let user_comment_res of user_comments;\">\n                <div class=\"card col-12\">\n                    <p class=\"mt fontDate\">{{user_comment_res.comment_date}}</p>\n                    <p class=\"font\"> {{user_comment_res.comment}}</p>\n                </div> \n              </div>                 \n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncomeService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeSaveIncome(income) {\n    return this.http.post(`${APP_URL}/incomes/`,income);\n  }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from './service/data/user.service';\nimport { BasicAuthService } from './service/http/basic-auth.service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent implements OnInit{\n  title = 'myaccount';\n \n\n  constructor(public basicAuthService: BasicAuthService) {\n   }\n\n   ngOnInit() {}\n \n}\n\n\n","<div *ngIf=\"basicAuthService.AccountPageId()==='home'\">\n    <div class=\"wrapper\">\n        <app-header></app-header>\n        <app-rsidebar></app-rsidebar>\n        <app-sidebar></app-sidebar>\n        <router-outlet></router-outlet>\n\n    </div>\n</div>\n<div *ngIf=\"basicAuthService.AccountPageId()==='login'\">\n    <app-login-component></app-login-component>\n</div>\n<div *ngIf=\"basicAuthService.AccountPageId()==='register'\">\n    <app-user-registration></app-user-registration>\n</div>\n<div *ngIf=\"basicAuthService.AccountPageId()==='forget_password'\">\n    <app-forgot-password></app-forgot-password>\n</div>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { User } from '../user-registration/user-registration.component';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\nuser: User\nuserId : number;\nmessage: String;\nspinner_status : number= 0;\nconstructor(private userService : UserService, private basicAuthService: BasicAuthService) { \n  this.user = new User(0, '', '', '', '', '', 0, true, null, 0);\n}\n\nngOnInit(): void {\n  this.executegetUserDetail();\n}\n\n\nexecutegetUserDetail() {\n      this.userService.executeFindUserByuserId(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n       (res) =>  {\n            this.user = res;\n        }\n      )\n}\n\nexecuteUpdateUser(updateUserForm) {\n  this.spinner_status = 1;\n  this.userService.executeUpdateUser(this.user).subscribe(\n    () =>  {\n      this.spinner_status = 0;\n      this.message = 'Successful update';\n      updateUserForm.reset();\n     },\n     _error => {\n      if(_error.status == 417)\n      {\n       this.spinner_status = 0;\n       alert(\"email Id is already registered\")   \n      }\n     }\n   );\n}\n\n\n}\n","<div class=\"container-fluid font-weight-bold\">\n    <section class=\"content\" *ngIf='message'>\n        <div class=\"card card-success\">\n            <div class=\"card-header\">\n                <h3 class=\"card-title text-center\"> {{message}}</h3>\n                <div class=\"card-tools\">\n                    <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </section>\n    <div class=\"container\">\n        <h2 class=\"pt-2 pb-0 header\">Profile</h2>\n    </div>\n    <form action=\"\" #updateUserForm=\"ngForm\">\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>User Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #user_name=\"ngModel\" [disabled]=\"true\" ngModel [(ngModel)]='user.userName' name=\"user_name\" placeholder=\"User Name\" minlength=\"2\" required [ngClass]=\"{'form-control': true}\">    \n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #name=\"ngModel\" ngModel [(ngModel)]='user.name' name=\"name\" placeholder=\"Name\" required [ngClass]=\"{'form-control': true, \n             'is-invalid': !name?.valid && name?.touched,  \n             'is-valid': name?.valid && name?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.required && name?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.minlength && name?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Address<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #address=\"ngModel\" ngModel [(ngModel)]='user.address' name=\"address\" placeholder=\"Address\" required minlength=\"10\" [ngClass]=\"{'form-control': true, \n                    'is-invalid': !address?.valid && address?.touched,  \n                     'is-valid': address?.valid && address?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.required && address?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.minlength && address?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 10 characters. </small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Mobile Number<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 co col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #mobile=\"ngModel\" ngModel [(ngModel)]='user.mobileNo' name=\"mobile\" pattern=\"^[6789][0-9]{9}$\" placeholder=\"mobile number\" required [ngClass]=\"{'form-control': true, \n                    'is-invalid': !mobile?.valid && mobile?.touched,  \n                    'is-valid': mobile?.valid && mobile?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.required && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.pattern && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid mobile number.</small>\n            </div>\n        </div><br>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n                    <h4>Email<sup class=\"color\">*</sup></h4>\n                </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"email\" #email=\"ngModel\" ngModel [(ngModel)]='user.recoveryEmail' name=\"email\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"email\" [ngClass]=\"{'form-control': true, \n                    'is-invalid': !email?.valid && email?.touched,  \n                    'is-valid': email?.valid && email?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.required && email?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.pattern && email?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid email</small>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\">\n                <h4 class=\"mt-1 mb-0 btnText\">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"executeUpdateUser(updateUserForm)\" [disabled]=\"updateUserForm.invalid\">\n                <h4 class=\"mt-1 mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Update</h4>\n            </button>\n        </div>\n    </form>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\nimport { Incomed } from 'src/app/components/day-book/day-book.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashBookService {\n\n  constructor(\n    private http :HttpClient\n  ) { }\n\n  executeFindAllCashTransactionBetweenDate(id, from, to) {\n    return this.http.get<any[]>(`${APP_URL}/cash/${id}/${from}/to/${to}`);\n  }\n\n  executeFindNetAmount(userId) {\n    return this.http.get<Object>(`${APP_URL}/netAmount/${userId}`)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { APP_URL } from 'src/app.constants';\nimport { IncomeCategories } from 'src/app/table/income-cat-table/income-cat-table.component';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncomeCategoryService {\n \n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  executeFindAllIncomeCategories(userId: number) {\n    return this.http.get<IncomeCategories[]>(`${APP_URL}/users/${userId}/incomecategories`);\n  }\n\n  executeDeleteCategory(incomeCategoryId: any) {\n     return this.http.delete<String>(`${APP_URL}/incomecategories/${incomeCategoryId}`);\n  }\n\n  executeFindIncomeCategory(incomeCategoryId: number) {\n    return this.http.get<IncomeCategories>(`${APP_URL}/incomecategories/${incomeCategoryId}`);\n  }\n\n  executeUpdateIncomeCategory(incomeCategoryId: Number, incomeCategory: IncomeCategories) {\n    return this.http.put<IncomeCategories>(`${APP_URL}/incomecategories/${incomeCategoryId}`,incomeCategory);\n  }\n\n  executeSaveIncomeCategory(incomeCategory: IncomeCategories) {\n    return this.http.post(`${APP_URL}/incomecategories/`,incomeCategory);\n  }\n\n}\n","export const APP_URL = \"http://localhost:8080\"","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from\n  '@angular/router';\nimport { BasicAuthService } from './basic-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(private basicAuthService: BasicAuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.basicAuthService.isAccountUserLoggedIn())\n      return true;\n      this.basicAuthService.setAccountPageId('login');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserRegistrationComponent } from './components/user-registration/user-registration.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\n\nimport { HeaderComponent } from './components/header/header.component';\n\nimport { IncomeCategoriesComponent } from './components/income-categories/income-categories.component';\nimport { ExpensesComponent } from './components/expense/expense.component';\nimport { IncomeComponent } from './components/income/income.component';\nimport { CashBookComponent } from './components/cash-book/cash-book.component';\nimport { BankBookComponent } from './components/bank-book/bank-book.component';\nimport { DayBookComponent } from './components/day-book/day-book.component';\nimport { BalanceSheetComponent } from './components/balance-sheet/balance-sheet.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\nimport { HttpIntercepterBasicAuthService } from './service/http/http-intercepter-basic-auth.service';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ExpenseCatTableComponent } from './table/expense-cat-table/expense-cat-table.component';\nimport { ExpenseCategoriesComponent } from './components/expense-categories/expense-categories.component';\nimport { IncomeCatTableComponent } from './table/income-cat-table/income-cat-table.component';\nimport { CalculatorComponent } from './calculator/calculator.component';\nimport { RsidebarComponent } from './components/rsidebar/rsidebar.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { CreatePageComponent } from './components/create-page/create-page.component';\nimport { DiaryComponent } from './components/diary/diary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationComponent,\n    SidebarComponent,\n    HeaderComponent,\n    ExpenseCategoriesComponent,\n    IncomeCategoriesComponent,\n    ExpensesComponent,\n    IncomeComponent,\n    CashBookComponent,\n    BankBookComponent,\n    DayBookComponent,\n    BalanceSheetComponent,\n    UserProfileComponent,\n    LoginComponentComponent,\n    IncomeCatTableComponent,\n    ExpenseCatTableComponent,\n    CalculatorComponent,\n    RsidebarComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    CreatePageComponent,\n    DiaryComponent,\n   \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    DataTablesModule,\n    \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpIntercepterBasicAuthService, multi: true },\n   \n  \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IncomeCategoryService } from 'src/app/service/data/income-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { IncomeCategories } from 'src/app/table/income-cat-table/income-cat-table.component';\n\n\n@Component({\n  selector: 'app-income-categories',\n  templateUrl: './income-categories.component.html',\n  styleUrls: ['./income-categories.component.css']\n})\nexport class IncomeCategoriesComponent implements OnInit {\n\n  incomeCategory: IncomeCategories;\n  incomeCategoryId: number;\n  spinner_status : number= 0;\n  constructor(private route: ActivatedRoute, private service: IncomeCategoryService, private router: Router, private basicAuthService : BasicAuthService) {\n    this.incomeCategory = new IncomeCategories(0, '', '',basicAuthService.getAccountAuthenticatedUserId());\n    this.incomeCategoryId = this.route.snapshot.params['incomeCategoryId'];\n    console.log(this.incomeCategoryId);\n    console.log(\"value\");\n    if (this.incomeCategoryId != 0) {\n      this.service.executeFindIncomeCategory(this.incomeCategoryId).subscribe(\n        response => {\n          this.incomeCategory = response;\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n  }\n  \n  saveIncomeCategory(incomeCatForm) {\n    this.spinner_status = 1;\n    if (this.incomeCategoryId != 0) {\n      this.service.executeUpdateIncomeCategory(this.incomeCategoryId, this.incomeCategory).subscribe(\n        data => {\n          this.spinner_status = 0;\n          this.router.navigate(['incomecategory']);\n          incomeCatForm.reset();\n        }\n      );\n    }\n    else {\n      this.service.executeSaveIncomeCategory(this.incomeCategory).subscribe(\n        data => {\n          this.router.navigate(['incomecategory']);\n\n        }\n      );\n\n    }\n\n  }\n}\n","<div class=\"container-fluid  pt-0 font-weight-bold\">\n    <section class=\"conatiner content pt-1 text-center\">\n        <h1 class=\"heading\">Income Categories</h1>\n    </section>\n    <form action=\"\" #incomesCategoryForm=\"ngForm\">\n        <div class=\"row form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Name<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n\n                <input type=\"text\" ngModel [(ngModel)]='incomeCategory.incomeCategoryName' required minlength=\"5\" placeholder=\"Enter Name\" name=\"po\" id=\"fntext\" #bindname=\"ngModel\" [ngClass]=\"{'form-control': true, \n         'is-invalid': !bindname?.valid && bindname?.touched,  \n         'is-valid': bindname?.valid && bindname?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.required && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.minlength && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 5 characters.</small>\n                <BR>\n\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Detail<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n                <textarea ngModel required minlength=\"5\" rows=\"2\" cols=\"50\" [(ngModel)]='incomeCategory.incomeCategoryDetails' #category=\"ngModel\" name=\"catdetail\" placeholder=\"Enter Categorie Detail\" [ngClass]=\"{'form-control': true, \n          'is-invalid': !category?.valid && category?.touched,  \n          'is-valid': category?.valid && category?.touched}\"></textarea>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.required && category?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required\n        </small>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.minlength && category?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 5 characters.\n        </small>\n                <BR>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between \">\n            <button type=\"button\" class=\"btn btncancel btn-sm btn-xs btn-md  btn-lg\">\n                <h3 class=\"mt-0 mb-0 btnText\" routerLink=\" \">Cancel</h3>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit  btn-sm btn-xs btn-md btn-lg\" (click)=\"saveIncomeCategory(incomesCategoryForm)\" [disabled]=\"incomesCategoryForm.invalid\">\n                <h3 class=\"mt-0 mb-0 btnText\"> <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h3>\n            </button>\n\n        </div>\n    </form>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\nimport { Incomed } from 'src/app/components/day-book/day-book.component';\nimport { Income } from 'src/app/components/income/income.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DayBookService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeFindIncomeBetweenDate(id, from, to) {\n    return this.http.get<Incomed[]>(`${APP_URL}/incomes/${id}/${from}/to/${to}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\nexport class Comment {\n  constructor(\n    public user_comment : String,\n    public  diary_id : number)\n     {}\n    public getUser_comment() : String {\n      return this.user_comment;\n    }\n    \n    public getDiary_id() : number {\n      return this.diary_id;\n    }\n}\n\nexport class Diary {\n  constructor(\n    public notes_heading : String,\n    public notes_detail : String,\n    public  userId : number) {}\n    public getNotes_heading() : String {\n      return this.notes_heading;\n    }\n    public getNotes_detail() : String {\n      return this.notes_detail;\n    }\n    public getUserId() : number {\n      return this.userId;\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiaryService {\n\n  constructor(private http : HttpClient) { }\n\n  executeFindAllUser_Notes(userId) {\n    return this.http.get<any[]>(`${APP_URL}/diary_update/${userId}`);\n  }\n\n  executeDeleteNote(diaryId: any) {\n    return this.http.delete<String>(`${APP_URL}/delete_notes/${diaryId}`);\n }\n\n  executeFindAllUser_CommentsBYnotes_id(diaryId) {\n    return this.http.get<any[]>(`${APP_URL}/comment_update/${diaryId}`);\n  }\n  executeSaveUserComment(comment) {\n    return this.http.post(`${APP_URL}/save_comment/`,comment);\n  }\n  \n\n  executeSaveNotes(diary) {\n    return this.http.post(`${APP_URL}/save_diary/`,diary);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { BankBookService } from 'src/app/service/data/bank-book.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { Incomed } from '../day-book/day-book.component';\n\n@Component({\n  selector: 'app-bank-book',\n  templateUrl: './bank-book.component.html',\n  styleUrls: ['./bank-book.component.css']\n})\nexport class BankBookComponent implements OnInit {\n  from :Date;\n  to : Date;\n  details: Incomed[] = [] ;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  content :String;\n  content2 : String;\n  closingBalance : number;\n\n  constructor(\n    private service:BankBookService,\n    private basicAuthService : BasicAuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.executeFindNetAmount();\n  }\n  \n  headers = ['S NO.', 'Date', 'Amount', 'Pay/receive']\n  findAllBankTransaction(from, to) {\n    this.service.executeFindAllBankTransactionBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(), from, to).subscribe(\n      (response : any) => {\n        this.details = response;\n        console.log(this.details);\n        this.dtTrigger.next();\n      }\n    );\n  }\n\n  executeFindNetAmount() {\n    this.service.executeFindNetAmount(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (response : number) => {\n        this.closingBalance = response;\n      }\n    )\n  }\n\n}\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <form #bankBook=\"ngForm\">\n            <table class=\"table table-bordered table-responsive-xl table-sm\">\n                <thead>\n                    <tr>\n                        <th style=\"width:8.5%;\">\n                            <h2 class=\"text-left fontBankBook\">Bank Book</h2>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">Date From </h4>\n                            <input  type=\"date\" #selected_date_from=\"ngModel\" ngModel name=\"selected_date_from\" [(ngModel)]=\"from\" required/>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" [(ngModel)]=\"to\" required/>\n                        </th>\n                        <th class=\"button\">\n                            <button type=\"button\" (click)=\"findAllBankTransaction(from, to)\" [disabled]=\"bankBook.invalid\">\n                            <h4 class=\"mt-0 mb-0 text-white\">Show</h4>\n                        </button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th class=\"thHeading\" *ngFor=\"let column of headers \">\n                            <h4 class=\"text-white font mb-0\">\n                                {{column}}\n                            </h4>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr class=\"trRowDetail\" *ngFor=\"let detail of details; index as i; \">\n                        <td>\n                            {{i + 1}}\n                        </td>\n                        <td>\n                            {{detail[0]}}\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\" class=\"biColor\">\n                                + {{detail[1]}}\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\" class=\"colorRed\">\n                                - {{detail[1]}}\n                            </div>\n\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\">\n                                receive\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\">\n                                pay\n                            </div>\n                        </td>\n                    </tr>\n                    <tr class=\"bgBlack\">\n                        <td colspan=\"2 \">\n                            <h4 class=\"fontBankBook\">Closing Balance </h4>\n                        </td>\n\n                        <td colspan=\"2 \" class=\"closingBalance\">\n                            <h3 class=\"fontBankBook\">{{closingBalance}}</h3>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IncomeCategoryService } from 'src/app/service/data/income-category.service';\nimport { IncomeService } from 'src/app/service/data/income.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { IncomeCategories } from 'src/app/table/income-cat-table/income-cat-table.component';\n\nexport class Income {\n  constructor(\n    public incomeId: number,\n    public incomeAccount: string,\n    public incomeCategoryId: number,\n    public amount: number,\n    public transDate: Date,\n    public receiveMode: string,\n    public remark: string,\n    public userId: number\n  ) { }\n\n  public getIncomeId(): number {\n    return this.incomeId;\n  }\n  public getIncomeAccount(): string {\n    return this.incomeAccount;\n  }\n\n  public getIncomeCategoryId(): number {\n    return this.incomeCategoryId;\n  }\n\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  public getTansDate(): Date {\n    return this.transDate;\n  }\n\n  public getReceiveMode(): string {\n    return this.receiveMode;\n  }\n\n  public getRemark(): string {\n    return this.remark;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n\n}\n\n@Component({\n  selector: 'app-income',\n  templateUrl: './income.component.html',\n  styleUrls: ['./income.component.css']\n})\nexport class IncomeComponent implements OnInit {\n\n  income: Income;\n  details: IncomeCategories[] = [];\n  message: string;\n  spinner_status : number = 0;\n  constructor(private incomeService: IncomeService, private serviceCatSerice: IncomeCategoryService, private basicAuthService: BasicAuthService) {\n    this.income = new Income(0, '', 2, 0, null, 'CI', '', basicAuthService.getAccountAuthenticatedUserId());\n  }\n\n  refreshAllCategories() {\n    this.serviceCatSerice.executeFindAllIncomeCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      response => {\n        this.details = response;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n  }\n\n  saveIncome(incomesform) {\n    this.spinner_status = 1;\n    this.incomeService.executeSaveIncome(this.income).subscribe(\n      response => {\n        this.spinner_status = 0;\n        this.message = 'Income Addition Successful';\n        incomesform.reset();\n      }\n    );\n\n  }\n\n\n\n  \n\n}\n","<section class=\"content\" *ngIf='message'>\n\n    <div class=\"card card-success\">\n        <div class=\"card-header\">\n            <h3 class=\"card-title text-center\"> {{message}}</h3>\n            <div class=\"card-tools\">\n\n                <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n          <i class=\"fas fa-times\"></i></button>\n            </div>\n        </div>\n    </div>\n\n</section>\n<div class=\"container-fluid   text-black font-weight-bold\">\n    <div class=\"container \">\n        <h1 class=\"pt-2 pb-1 heading\">Income</h1>\n    </div>\n    <form action=\"\" #incomeForm=\"ngForm\">\n        <div class=\"row  form-group\">\n            <br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Income<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #incomebind=\"ngModel\" ngModel [(ngModel)]='income.incomeAccount' name=\"income\" placeholder=\"income\" required [ngClass]=\"{'form-control': true, \n                     'is-invalid': !incomebind?.valid && incomebind?.touched,  \n                     'is-valid': incomebind?.valid && incomebind?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"incomebind?.errors?.required && incomebind?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"incomebind?.errors?.minlength && incomebind?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n          <h4>Category<sup class=\"color\">*</sup></h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n                <select id=\"inputState\" class=\"form-control\" ngModel [(ngModel)]=\"income.incomeCategoryId\" #incomeCategoryId=\"ngModel\" required name=\"incomCategoryId\" id=\"incomCategoryId\" [ngClass]=\"{'form-control' : true,\n                'is-invalid' : !incomeCategoryId?.valid && incomeCategoryId?.touched,\n                'is-valid' : incomeCategoryId?.valid && incomeCategoryId?.touched}\">\n            <option *ngFor=\"let detail of details\" value='{{detail.incomeCategoryId}}'>{{detail.incomeCategoryName}}</option>\n        </select>\n            <small *ngIf=\"incomeCategoryId?.errors?.required && incomeCategoryId?.touched\" class=\"form-text custom-invalid-feedback color\">Category is not selected</small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg- 6 pl-5 form-group\">\n                <label for=\"fntext\"> \n          <h4>Amount<sup class=\"color\">*</sup></h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n                <input type=\"text\" placehoder=\"Amount\" #annualref=\"ngModel\" ngModel [(ngModel)]='income.amount' name=\"amount\" required [ngClass]=\"{'form-control': true }\" />\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col  col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\">\n                <h4>Date<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"sd-container col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"date\" ngModel [(ngModel)]='income.transDate' required placeholder=\"from\" name=\"from_date\" id=\"from_date\" #from_date=\"ngModel\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !from_date?.valid && from_date?.touched,  \n                'is-valid': from_date?.valid && from_date?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.required && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.minlength && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n          <h4>Remark<sup class=\"color\">*</sup></h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"text\" #remarkref=\"ngModel\" ngModel [(ngModel)]='income.remark' name=\"remark\" required placeholder=\"remark\" [ngClass]=\"{'form-control': true, \n        'is-invalid': !remarkref?.valid && remarkref?.touched,  \n        'is-valid': remarkref?.valid && remarkref?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.required && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.minlength && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Remark requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group \" style=\"margin-top: -2%;\">\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n          <h4>ReceiveMode</h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6\">\n                <div class=\" form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n              <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]='income.receiveMode' value=\"CI\">Cash Receipt\n            </label></h4>\n                </div>\n                <div class=\"form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n              <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]='income.receiveMode' value=\"BI\"> Bank Receipt\n            </label></h4>\n                </div>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between mrt-4\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\">\n                <h4 class=\"mt-o mb-0 btnText\" routerLink=\" \">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"saveIncome(incomeForm)\" [disabled]=\"incomeForm.invalid\">\n                <h4 class=\"mt-o mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h4>\n            </button> \n        </div>\n    </form>\n</div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BalanceSheetService {\n\n  constructor(private http : HttpClient) { }\n\n  executeFindBalanceSheetBetweenDate(userId, from, to) {\n    return this.http.get<any[]>(`${APP_URL}/balanceSheet/${userId}/${from}/to/${to}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponentComponent implements OnInit {\n\n  invalidCreditials: boolean;\n  invalidData: boolean;\n  username: string = '';\n  user_password: string = '';\n  constructor(private basicAuthService: BasicAuthService, private router: Router) {\n    this.invalidCreditials = false;\n    this.invalidData = false;\n  }\n\n  ngOnInit() {\n  }\n       \n  signIn() {\n    if (this.username.trim().length === 0 || this.user_password.trim().length === 0) {\n      this.invalidData = true;\n      this.invalidCreditials = false;\n      return;\n    }\n    this.basicAuthService.executeAuthencationService(this.username, this.user_password).subscribe(\n      data => {\n        this.basicAuthService.setAccountPageId('home');\n      },\n      error => {\n        this.invalidData = false;\n        this.invalidCreditials = true;\n      }\n    )\n  }\n\n  register() {\n    this.basicAuthService.setAccountPageId('register');\n  }\n\n  forget_password() {\n    this.basicAuthService.setAccountPageId('forget_password');\n  }\n  \n}","<div class=\"container-fluid\">\n  <div *ngIf=\"invalidCreditials\" class=\"alert alert-danger alert-dismissible mb-0 pb-0\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\n    Invalid Username or Password !\n  </div>\n  <div class=\"loginbox\"> <img src=\"../assets/dist/img/avtar.png\" class=\"avatar\">\n    <h1>Login Here</h1>\n    <form method=\"post\" action=\"#\">\n      <div class=\"form-group\">\n        <p>Username</p>\n        <input type=\"text\" #userName=\"ngModel\" placeholder=\"username\" ngModel [(ngModel)]=\"username\" name=\"userName\" \n          pattern=\"[a-zA-Z0-9_]{5,15}$\" class=\"mt\" [ngClass]=\"{\n            'is-invalid': !userName?.valid && userName?.touched,  \n            'is-valid': userName?.valid && userName?.touched }\" required />\n      </div>  \n      <div class=\"form-group\">\n        <p>Password</p>\n        <input type=\"password\" #password=\"ngModel\"  name=\"password\" ngModel [(ngModel)]=\"user_password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n          pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" class=\"mt\" [ngClass]=\"{ \n              'is-invalid': !password?.valid && password?.touched,  \n              'is-valid': password?.valid && password?.touched }\" required/>\n        <small *ngIf=\"password?.errors?.required && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Field is required</small>\n        <small *ngIf=\"password?.errors?.pattern && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n      </div>  \n      <a role=\"button\" (click)=\"signIn()\" class=\"loginButton btn btn-block pt-2\"> login </a>\n      <div class=\"row\">\n        <div class=\"col-6 ml-0 mr-0 pl-0 mt-3\"><a role=\"button\" class=\"pl-0\" (click)=\"forget_password()\">Lost your password?</a> </div> \n        <div class=\"col-6 ml-0 mr-0 pl-0 mt-3\">\n        <a role=\"button\" class=\"pr-0 pl-0 ml-0 mr-0\" (click)=\"register()\">Don't have an account?</a>\n      </div>\n    </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  \n  emailId: string = '';\n  message:String;\n  err:String;\n  foo:number;\n  spinner_status :number = 0;\n  constructor(\n      private router: Router,\n      private basicAuthService: BasicAuthService,\n      private userService : UserService\n    \n  ) {\n      \n   }\n\n  ngOnInit() {\n     \n  }\n\n  forgotPassword(forgetPassword) {\n    this.foo = 0\n    this.spinner_status = 1;\n    this.userService.executeForgotPassword(this.emailId).subscribe(\n     () => {\n         this.foo = 1;\n         this.spinner_status = 0;\n         forgetPassword.reset();\n         this.message=\"Request to reset password received. Check your inbox for the reset link.\"\n      },\n      error => {\n          this.spinner_status = 0;\n          this.foo = 2;\n          forgetPassword.reset();\n          this.err = \"This email does not exist!\"\n        }\n    );\n  }\n\n  cancel() {\n    this.basicAuthService.setAccountPageId('login');\n  }\n\n\n}\n","<div class=\"container-fluid px-4 px-md-4 py-5\">\n    <div class=\"row d-flex justify-content-center align\"> \n        <div class=\"card p-0 mb-5\">\n            <div class=\"forgot\">\n                <h2 class=\"text text-center\">Forgot your password?</h2>\n                <p class=\"text\">Change your password in three easy steps. This will help you to secure your password!</p>\n                <ol class=\"list-unstyled\">\n                    <li class=\"text\"><span class=\"text-primary text-medium\">1.&nbsp;&nbsp;</span>Enter your email address below.</li>\n                    <li class=\"text\"><span class=\"text-primary text-medium\">2.&nbsp;&nbsp;</span>Our system will send you a temporary link</li>\n                    <li class=\"text\"><span class=\"text-primary text-medium\">3.&nbsp;&nbsp;</span>Use the link to reset your password</li>\n                </ol>\n            </div>\n            <p *ngIf=\"foo === 1\" class=\"text-center text-success mb-0\"> <b>{{message}}</b> </p>\n            <p *ngIf=\"foo === 2\" class=\"text-center text-danger mb-0\"> <b>{{err}} </b></p>\n            <form action=\"\"  #forgetPassword=\"ngForm\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <h3 class=\"text\">Enter your email address</h3>\n                        <input type=\"email\" #userEmail=\"ngModel\" placeholder=\"email id\" ngModel [(ngModel)]=\"emailId\" name=\"userEmail\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                             class=\"mt\" [ngClass]=\"{ 'form-control': true,\n                                'is-invalid': !userEmail?.valid && userEmail?.touched,  \n                                'is-valid': userEmail?.valid && userEmail?.touched }\" required />\n                        <small \n                                *ngIf=\"userEmail?.errors?.required && userEmail?.touched\" \n                                class=\"form-text custom-invalid-feedback color\">Email address is required\n                        </small>\n                        <small\n                                *ngIf=\"userEmail?.errors?.pattern && userEmail?.touched\" \n                                class=\"form-text custom-invalid-feedback color\">Email address is invalid\n                        </small>\n                        <small class=\"form-text text-muted text\">Enter the email address you used during the registration on PersonalBankAccount. Then we'll email a link to this address.</small>\n                    </div>\n                </div>\n                <div class=\"row mb-3\"><div class=\"col-6\">\n                    <button class=\"btn btn-danger ml-5\" type=\"submit\" (click)=\"cancel()\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Back to Login&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button></div>\n                    <div class=\"col-6\"><button class=\"btn btn-success ml-5\" type=\"submit\" [disabled]=\"forgetPassword.invalid\" (click)=\"forgotPassword(forgetPassword)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Get New Password</button> </div>\n                </div>   \n            </form> \n        </div>\n    </div> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { DayBookService } from 'src/app/service/data/day-book.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\n\nexport class Incomed {\n  constructor(\n    public incomeId: number,\n    public incomeAccount: string,\n    public incomeCategory: ExpenseCategories,\n    public amount: number,\n    public transDate: Date,\n    public receiveMode: string,\n    public remark: string,\n    public userId: number\n  ) { }\n\n  public getIncomeId(): number {\n    return this.incomeId;\n  }\n  public getIncomeAccount(): string {\n    return this.incomeAccount;\n  }\n\n  public getIncomeCategory(): ExpenseCategories {\n    return this.incomeCategory;\n  }\n\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  public getTansDate(): Date {\n    return this.transDate;\n  }\n\n  public getReceiveMode(): string {\n    return this.receiveMode;\n  }\n\n  public getRemark(): string {\n    return this.remark;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n\n\n}\n@Component({\n  selector: 'app-day-book',\n  templateUrl: './day-book.component.html',\n  styleUrls: ['./day-book.component.css']\n})\nexport class DayBookComponent implements OnInit {\n  from :Date;\n  to : Date;\n  details: Incomed[] = [] ;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  content :String;\n  content2 : String;\n  \n  headers = ['S NO.', 'Account Name','Date', 'Amount', 'Pay/Receive', 'Remark' ]\n  constructor(\n    private service : DayBookService,\n    private basicAuthService : BasicAuthService\n  ) {\n    \n   } \n\n  findAllIncome(from, to) {\n    this.content = \"value\";\n    this.content2 = this.content;\n    this.service.executeFindIncomeBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(),from, to).subscribe(\n      (response: any) => {\n        this.details = response;\n        this.dtTrigger.next();\n      }\n    );  \n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <form #dayBook=\"ngForm\">\n            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table  table-bordered table-sm table-responsive-sm\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 8.5%;\">\n                            <h2 class=\"fontDayBook\">Day Book </h2>\n                        </th>\n                        <th colspan=\"2\" class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">Date From </h4>\n                            <input type=\"date\" #selected_date_from=\"ngModel\" ngModel name=\"selected_date_from\" ngModel [(ngModel)]='from' required/>\n                        </th>\n                        <th colspan=\"2\" class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" ngModel [(ngModel)]='to' required/>\n                        </th>\n                        <th class=\"button \">\n                            <button type=\"button\" [disabled]=\"dayBook.invalid\" (click)=\"findAllIncome(from, to) \">\n                                <h4 class=\"mt-0 mb-0 text-white\">Show</h4></button>\n                        </th>\n                    </tr>\n                    <th class=\"text-center\" *ngFor=\"let column of headers \">\n                        <h4 class=\"font\">{{column}}</h4>\n                    </th>\n                    <tr class=\"bgBlack\" *ngIf='content'>\n                        <th colspan=\"6 \" class=\"text-left expenseHeading\">\n                            <h4 class=\"font\">Expenses</h4>\n                        </th>\n                    </tr>\n                </thead>\n                <tr class=\"pl-0 trRowDetail\" *ngFor=\"let detail of details[1]; index as i \">\n                    <td>\n                        {{i+1}}\n                    </td>\n                    <td>\n                        {{detail[0].expenseAccount}}\n                    </td>\n                    <td>\n                        {{detail[0].transDate}}\n                    </td>\n                    <td class=\"colorRed text-center\">\n                        -{{detail[0].amount}}\n                    </td>\n                    <td class=\"text-center\">\n                        <div *ngIf=\"detail[0].receiveMode == 'BE' ||'CE' \">\n                            pay\n                        </div>\n                    </td>\n                    <td>\n                        {{detail[0].remark}}\n                    </td>\n                </tr>\n                <td colspan=\"6 \" class=\"text-left text-white bgBlack\" *ngIf='content2'><strong>\n                <h4 class=\"font\">Incomes</h4>\n                </strong></td>\n                <tbody>\n                    <tr class=\"pl-0 text-left\" *ngFor=\"let detail of details[0]; index as i \">\n                        <td>\n                            {{i+1}}\n                        </td>\n                        <td>\n                            {{detail[0].incomeAccount}}\n                        </td>\n                        <td>\n                            {{detail[0].transDate}}\n                        </td>\n                        <td class=\"colorGreen text-center\">\n                            +{{detail[0].amount}}\n                        </td>\n                        <td class=\"text-center\">\n                            <div *ngIf=\"detail[0].receiveMode == 'BI' || 'CI' \">\n                                receive\n                            </div>\n                        </td>\n                        <td>\n                            {{detail[0].remark}}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { APP_URL } from 'src/app.constants';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenseCategoryService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  executeFindAllExpenseCategories(userId) {\n    return this.http.get<ExpenseCategories[]>(`${APP_URL}/users/${userId}/expensecategories`);\n  }\n\n  executeDeleteCategory(expenseCategoryId) {\n     return this.http.delete<String>(`${APP_URL}/expensecategories/${expenseCategoryId}`);\n  }\n\n  executeFindExpenseCategory(expenseCategoryId) {\n    return this.http.get<ExpenseCategories>(`${APP_URL}/expensecategories/${expenseCategoryId}`);\n  }\n\n  executeUpdateExpenseCategory(expenseCategoryId, expenseCategory) {\n    return this.http.put<ExpenseCategories>(`${APP_URL}/expensecategories/${expenseCategoryId}`,expenseCategory);\n  }\n\n  executeSaveExpenseCategory(expenseCategory) {\n    return this.http.post(`${APP_URL}/expensecategories/`,expenseCategory);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  val: string;\n  enrollmentNo: string;\n  document: Document\n  user_password: String;\n  message:String;\n  userId : String;\n  foo: number = 4;\n  new_password : String\n  spinner_status: number = 1;\n  stringPattern : String;\n  constructor(private activatedRoute: ActivatedRoute, public basicAuth : BasicAuthService,\n    private router : Router, private userService : UserService) { \n      this.val = this.activatedRoute.snapshot.url[0].path;\n      this.enrollmentNo = this.activatedRoute.snapshot.url[1].path;\n      this.stringPattern = this.activatedRoute.snapshot.url[2].path;\n      this.userId = this.activatedRoute.snapshot.url[3].path;\n      if(this.val == 'reset-password') {\n        basicAuth.setAccountPageId('reset-password')\n      }\n      else {\n        basicAuth.setAccountPageId('home')\n      }\n      this.linkverify();\n  }\n\n  ngOnInit(): void { \n    \n  }\n  executeResetPassword(passwordReset) {\n    this.spinner_status = 0;\n    if(!(this.user_password == this.new_password))\n    {\n      this.spinner_status = 1;\n      alert(\"          password not match\");\n      passwordReset.reset();\n      return;\n    }\n    this.userService.executeUpdatePassword(this.userId, this.user_password).subscribe(\n    ()  => {\n      this.foo = 2;\n      this.spinner_status = 1;\n      this.message= \"Password successfully reset. You can now log in with the new credentials.\"\n      },\n      _error => {\n        this.foo = 3;\n        this.spinner_status = 1;\n        this.message= \"The link is invalid or broken!\"\n      }\n    )\n  }\n  linkverify() {\n    this.userService.executeFindUsercredential(this.userId, this.stringPattern).subscribe(\n     (res) => {\n      this.foo = res;\n     }\n     )\n  }\n  login() {\n    this.basicAuth.setAccountPageId('login');\n    window.history.pushState({}, document.title, \"/\" + \"#\");\n  }\n}\n","  <div class=\"container-fluid\">  \n    <h1 class=\"text-center\">Personal Account Password Reset</h1><br><br>\n    <section class=\"content\" *ngIf='foo ===  2'>\n        <div class=\"container border-0\">\n            <div class=\"card-body bg-success\">\n                <h3 class=\"text-center mt-0 mb-0\"> {{message}}</h3>\n            </div><br><br>\n               <div class=\"btnLogin\"> \n                   <button type=\"button\" class=\"float-right btn btn-sm btn-primary\" (click)=\"login()\">Login</button>\n                </div>\n        </div>\n    </section>\n    <section class=\"content\" *ngIf='foo === 3'>\n        <div class=\"card card-danger\">\n            <div class=\"card-body bg-danger\">\n                <h3 class=\"text-center mt-0 mb-0\"> {{message}}</h3>\n            </div>\n        </div>\n    </section>\n    <h3 *ngIf='foo === 0' class=\"text-danger text-center\"> The link is invalid or broken!</h3>\n\n    <form action=\"\" #passwordReset=\"ngForm\" *ngIf=\"foo == 1\">\n        <div class=\"row\">\n            <div class=\"col col-md-4 col-sm-8 col-lg-4 col-xs-12\">\n                <div class=\"form-group\">\n                    <label for=\"tempPassword\">New Password</label>\n                    <input type=\"password\" name=\"temp_password\" id=\"temp_password\" ngModel [(ngModel)]=\"new_password\" #temp_password=\"ngModel\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n                      pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" class=\"mt\" [ngClass]=\"{ 'form-control': true,\n                          'is-invalid': !temp_password?.valid && temp_password?.touched,  \n                          'is-valid': temp_password?.valid && temp_password?.touched }\" required/>\n                    <small *ngIf=\"temp_password?.errors?.required && temp_password?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                    <small *ngIf=\"temp_password?.errors?.pattern && temp_password?.touched\"  class=\"form-text custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n                </div>  \n                <div class=\"form-group\">\n                    <label for=\"confirmPassword\">Confirm Password</label>\n                    <input type=\"password\" #confirm_password=\"ngModel\"  name=\"confirm_password\" ngModel [(ngModel)]=\"user_password\" id=\"user_password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n                      pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" class=\"mt\" [ngClass]=\"{ 'form-control': true,\n                          'is-invalid': !confirm_password?.valid && confirm_password?.touched,  \n                          'is-valid': confirm_password?.valid && confirm_password?.touched }\" required/>\n                    <small *ngIf=\"confirm_password?.errors?.required && confirm_password?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                    <small *ngIf=\"confirm_password?.errors?.pattern && confirm_password?.touched\" class=\"form-text custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n                </div> <br>\n                <div class=\"row form-group\">\n                    <button type=\"button\" class=\"btn btn-success btn-block ml-3 mr-3\" (click)=\"executeResetPassword(passwordReset)\" [disabled]=\"passwordReset.invalid\"><b><span *ngIf=\"spinner_status == 0\" class=\"spinner-border spinner-border-sm text-white\"></span> &nbsp;Reset Password </b></button>\n                </div>       \n            </div>  \n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BalanceSheetService } from 'src/app/service/data/balance-sheet.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n@Component({\n  selector: 'app-balance-sheet',\n  templateUrl: './balance-sheet.component.html',\n  styleUrls: ['./balance-sheet.component.css']\n})\nexport class BalanceSheetComponent implements OnInit {\nname:string;\nfrom : Date;\nto : Date;\ndetails : any[];\ngrossProfit :number\n  constructor(\n    private basicAuthService : BasicAuthService, private balanceSheetService : BalanceSheetService\n  ) { }\nheaders = ['Incomes', 'Amount'];\nheaders_exp = ['Expenses', 'Amount']\nexecuteFindBalanceSheet(from, to) {\n  this.balanceSheetService.executeFindBalanceSheetBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(), from, to).subscribe(\n    (response : any) => {\n      this.details = response;\n     this.grossProfit = this.details[2]- this.details[3];\n    }\n  )\n}\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <div class=\"d-flex justify-content-center floattop sticky-top bgLightBrown\">\n            <h1 class=\"heading\">Balance Sheet</h1>\n        </div>\n        <form #balanceSheet=\"ngForm\">\n            <table class=\"table table-bordered   table-md table-lg table-sm table-xl mb-0\">\n                <thead class=\"bgLightBrown\">\n                    <tr>\n                        <th colspan=\"2\" class=\"tableHeader\">\n                            <h4 class=\"font mt-0 mb-0\"> Date From </h4>\n                            <input type=\"date\" #selected_date_from=\"ngModel\" ngModel  name=\"selected_date_from\" [(ngModel)]=\"from\" required />\n                        </th>\n                        <th colspan=\"2 \" class=\"tableHeader\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" [(ngModel)]=\"to\" required/>\n                        </th>\n                        <th class=\"button\">\n                            <button type=\"button\" class=\"btn-primary font\" style=\"margin-bottom: 0.6rem;\" [disabled]=\"balanceSheet.invalid\" (click)=\"executeFindBalanceSheet(from, to)\"> Show\n                            </button>\n                        </th>\n                    </tr>\n                </thead>\n            </table>\n        </form>\n        <div class=\"container\">\n            <table id=\"table_left\" class=\"new  table table-bordered table-sm table-md table-lg table-xl\">\n                <thead class=\"tableHeading\">\n                    <tr>\n                        <th colspan=2>\n                            <h4 class=\"font mt-0 mb-0\">Incomes</h4>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>\n                            <h3 class=\"font\">Incomes</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"font\">Amount</h3>\n                        </th>\n                    </tr>\n                </thead>\n                <tr *ngFor='let detail of details[0]'>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[0]}}\n                    </td>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[1]}}\n                    </td>\n                </tr>\n                <thead class=\"tableHeading\">\n                    <tr>\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">Total</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">{{details[2]}}</h3>\n                        </th>\n                    </tr>\n                </thead>\n            </table>\n            <table id=\"table_right\" class=\"new table  table-bordered table-sm table-md table-lg table-xl\">\n                <thead class=\"bg-black tableRight\">\n                    <tr>\n                        <th colspan=2>\n                            <h4 class=\"font mt-0 mb-0\">Expenses</h4>\n                        </th>\n                    </tr>\n                    <tr class=\"bgBlack\">\n                        <th>\n                            <h3 class=\"font\">Expenses</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"font\">Amount</h3>\n                        </th>\n                    </tr>\n                </thead>\n                <tr *ngFor='let detail of details[1]'>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[0]}}\n                    </td>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[1]}}\n                    </td>\n                </tr>\n                <thead>\n                    <tr class=\"bgBlack\">\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">Total</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">{{details[3]}}</h3>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody class=\"text-left\">\n                    <tr>\n                      <td class=\"colorDarkGreen\"><strong><h2>Gross profit</h2></strong></td>\n                      <td class=\"colorDarkGreen\"><strong>\n                      <h2>{{grossProfit}}</h2>\n                      </strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\nimport { User } from 'src/app/components/user-registration/user-registration.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeSaveUser(user) {\n    return this.http.post(`${APP_URL}/createUser/`,user);\n  }\n\n  executeupdateProfilePhoto(userId, profilePhoto : File) {\n    const formData = new FormData();\n    formData.append('profilePhoto', profilePhoto);\n    return this.http.put(`${APP_URL}/update_profile_photo/${userId}`,formData);\n  }\n\n  executeFindProfilePhoto(userId) {\n    return this.http.get<any>(`${APP_URL}/profile_photo/${userId}`)\n  }\n\n  executeUpdatePassword(userId, resetPassword) {\n    return this.http.put(`${APP_URL}/reset-password/${userId}`,resetPassword);\n  }\n  executeFindUsercredential(userId, pattern_url) {\n    return this.http.get<number>(`${APP_URL}/user_credential/${userId}/${pattern_url}`)\n  }\n  executeForgotPassword(emailId: any) {\n    return this.http.post<any>(`${APP_URL}/forgot-password`, emailId);\n  }\n  executeFindUserByuserId(userId) {\n    return this.http.get<any>(`${APP_URL}/user/${userId}`)\n  }\n  executeUpdateUser(user) {\n    return this.http.put(`${APP_URL}/user_update`, user);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { BalanceSheetComponent } from './components/balance-sheet/balance-sheet.component';\nimport { BankBookComponent } from './components/bank-book/bank-book.component';\nimport { CashBookComponent } from './components/cash-book/cash-book.component';\nimport { DayBookComponent } from './components/day-book/day-book.component';\nimport { ExpensesComponent } from './components/expense/expense.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { IncomeComponent } from './components/income/income.component';\nimport { RouteGuardService } from './service/http/route-guard.service';\nimport { IncomeCategoriesComponent } from './components/income-categories/income-categories.component';\nimport { ExpenseCategoriesComponent } from './components/expense-categories/expense-categories.component';\nimport { IncomeCatTableComponent } from './table/income-cat-table/income-cat-table.component';\nimport { ExpenseCatTableComponent } from './table/expense-cat-table/expense-cat-table.component';\nimport { UserRegistrationComponent } from './components/user-registration/user-registration.component';\nimport { CreatePageComponent } from './components/create-page/create-page.component';\nimport { DiaryComponent } from './components/diary/diary.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nconst routes: Routes = [\n  {path: '', component: SidebarComponent, canActivate: [RouteGuardService] },\n  {path:'userprofile', component:UserProfileComponent, canActivate: [RouteGuardService]},\n  {path:'userRegistration', component:UserRegistrationComponent},\n  {path:'balancesheet', component:BalanceSheetComponent, canActivate: [RouteGuardService]},\n  {path:'page', component:CreatePageComponent, canActivate: [RouteGuardService]},\n  {path:'diary', component:DiaryComponent, canActivate: [RouteGuardService]},\n  {path:'bankbook', component:BankBookComponent, canActivate: [RouteGuardService]},\n  {path:'cashbook', component:CashBookComponent, canActivate: [RouteGuardService]},\n  {path:'daybook', component:DayBookComponent, canActivate: [RouteGuardService]},\n  {path:'expensescategory', component:ExpenseCatTableComponent, canActivate: [RouteGuardService]},\n  {path:'expenses', component:ExpensesComponent, canActivate: [RouteGuardService]},\n  {path:'reset-password/:emailId/:token/:userId', component:ResetPasswordComponent},\n  {path:'header', component:HeaderComponent, canActivate: [RouteGuardService]},\n  {path: 'income', component:IncomeComponent, canActivate: [RouteGuardService]},   \n  {path: 'incomeCatForm/:incomeCategoryId', component: IncomeCategoriesComponent, canActivate: [RouteGuardService] },\n  {path: 'expenseCatForm/:expenseCategoryId', component: ExpenseCategoriesComponent, canActivate: [RouteGuardService] },\n  {path: 'incomecategory', component: IncomeCatTableComponent, canActivate: [RouteGuardService] },\n  {path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    $('a').on('click', function(){\n      $('a').removeClass('selected');\n      $(this).addClass('selected');\n  });\n  }\n\n\n  \n  \n\n}\n","<aside class=\"main-sidebar  elevation-4\">\n    <div class=\"sidebar\" style=\"margin-top:0px\">\n        <nav class=\"mt-2\">\n            <div class=\"header pt-2 font-weight-bolder text-center \">\n                <h1 class=\"heading\"> Masters</h1>\n            </div>\n            <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                <li class=\"nav-item has-treeview\">\n                    <a routerLink=\"expensescategory\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon target color\"></i> Expense Category\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"incomecategory\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Income Category\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"expenses\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Expense\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"income\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Income\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"cashbook\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Cash Book\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"bankbook\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Bank Book\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"daybook\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Day Book\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"balancesheet\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Balance Sheet\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"page\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Ceate Notes\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"diary\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i>\n                        Diary\n                    </a>\n                </li>\n                <li class=\"nav-item has-treeview\">\n                    <a class=\"nav-link link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\">\n                        <i class=\"fas fa-circle nav-icon color\"></i>\n                        <i class=\"fa fa-calculator\" aria-hidden=\"true\"></i>\n                    </a>\n                </li>\n\n            </ul>\n        </nav>\n\n    </div>\n\n</aside>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenseService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeSaveExpense(expense) {\n    return this.http.post(`${APP_URL}/expense/`,expense);\n  }\n  \n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}