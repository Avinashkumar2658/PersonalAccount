{"version":3,"sources":["webpack:///src/app/components/rsidebar/rsidebar.component.ts","webpack:///src/app/components/rsidebar/rsidebar.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/cash-book/cash-book.component.ts","webpack:///src/app/components/cash-book/cash-book.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/expense/expense.component.ts","webpack:///src/app/components/expense/expense.component.html","webpack:///src/app/components/expense-categories/expense-categories.component.ts","webpack:///src/app/components/expense-categories/expense-categories.component.html","webpack:///src/app/service/http/basic-auth.service.ts","webpack:///src/app/table/expense-cat-table/expense-cat-table.component.ts","webpack:///src/app/table/expense-cat-table/expense-cat-table.component.html","webpack:///src/app/service/http/http-intercepter-basic-auth.service.ts","webpack:///src/app/table/income-cat-table/income-cat-table.component.ts","webpack:///src/app/table/income-cat-table/income-cat-table.component.html","webpack:///src/app/calculator/calculator.component.ts","webpack:///src/app/calculator/calculator.component.html","webpack:///src/app/components/user-registration/user-registration.component.ts","webpack:///src/app/components/user-registration/user-registration.component.html","webpack:///src/app/components/create-page/create-page.component.ts","webpack:///src/app/components/create-page/create-page.component.html","webpack:///src/app/service/data/bank-book.service.ts","webpack:///src/app/components/diary/diary.component.ts","webpack:///src/app/components/diary/diary.component.html","webpack:///src/app/service/data/income.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/user-profile/user-profile.component.ts","webpack:///src/app/components/user-profile/user-profile.component.html","webpack:///src/app/service/data/cash-book.service.ts","webpack:///src/app/service/data/income-category.service.ts","webpack:///src/app.constants.ts","webpack:///src/app/service/http/route-guard.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/income-categories/income-categories.component.ts","webpack:///src/app/components/income-categories/income-categories.component.html","webpack:///src/app/service/data/day-book.service.ts","webpack:///src/app/service/data/diary.service.ts","webpack:///src/app/components/bank-book/bank-book.component.ts","webpack:///src/app/components/bank-book/bank-book.component.html","webpack:///src/app/components/income/income.component.ts","webpack:///src/app/components/income/income.component.html","webpack:///src/app/service/data/balance-sheet.service.ts","webpack:///src/app/components/login-component/login-component.component.ts","webpack:///src/app/components/login-component/login-component.component.html","webpack:///src/app/components/forgot-password/forgot-password.component.ts","webpack:///src/app/components/forgot-password/forgot-password.component.html","webpack:///src/app/components/day-book/day-book.component.ts","webpack:///src/app/components/day-book/day-book.component.html","webpack:///src/app/service/data/expense-category.service.ts","webpack:///src/app/components/reset-password/reset-password.component.ts","webpack:///src/app/components/reset-password/reset-password.component.html","webpack:///src/app/components/balance-sheet/balance-sheet.component.ts","webpack:///src/app/components/balance-sheet/balance-sheet.component.html","webpack:///src/app/service/data/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/main.ts","webpack:///src/app/service/data/expense.service.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RsidebarComponent","selector","templateUrl","styleUrls","HeaderComponent","basicAuthService","router","userService","i","event","progressInfos","selectedFiles","target","files","$","document","ready","change","readURL","input","reader","FileReader","onload","e","attr","result","fadeIn","readAsDataURL","on","removeClass","addClass","executeFindProfilePhoto","executeupdateProfilePhoto","getAccountAuthenticatedUserId","subscribe","fileName","imageName","nativeElement","value","idxDot","lastIndexOf","extFile","substr","length","toLowerCase","alert","srcElement","executeSaveProfilePhoto","res","profilePhoto","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","charCodeAt","Blob","type","logout","window","history","pushState","title","onChange","CashBookComponent","service","details","dtOptions","dtTrigger","headers","executeFindNetAmount","from","to","executeFindAllCashTransactionBetweenDate","response","console","log","next","closingBalance","findAllCashTransaction","environment","production","apiUrl","Expense","expenseId","expenseAccount","expenseCategoryId","amount","transDate","receiveMode","remark","userId","ExpensesComponent","expenseService","serviceCatSerice","spinner_status","expense","executeFindAllExpenseCategories","refreshAllCategories","expenseForm","executeSaveExpense","message","reset","saveExpense","ExpenseCategoriesComponent","route","expenseCategory","snapshot","params","executeFindExpenseCategory","expenseCategoryForm","executeUpdateExpenseCategory","navigate","executeSaveExpenseCategory","saveExpenseCategory","ACCOUNT_AUTHENTICATED_USER","ACCOUNT_TOKEN","ACCOUNT_PAGE_ID","ACCOUNT_USER_ID","AuthenticationBean","BasicAuthService","http","username","password","basicAuthHeaderString","btoa","Authorization","get","pipe","data","localStorage","setItem","parseInt","getItem","user","removeItem","pageId","providedIn","ExpenseCategories","expenseCategoryName","expenseCategoryDetails","ExpenseCatTableComponent","pagingType","lengthMenu","executeDeleteCategory","unsubscribe","addNewExpenseCategory","HttpIntercepterBasicAuthService","request","getAccountAuthenticatedToken","getAccountAuthenticatedUser","clone","setHeaders","handle","IncomeCategories","incomeCategoryId","incomeCategoryName","incomeCategoryDetails","IncomeCatTableComponent","executeFindAllIncomeCategories","addNewIncomeCategory","CalculatorComponent","currentNumber","firstOperand","operator","waitForSecondNumber","v","includes","op","secondOp","Number","doCalculation","String","getOperation","getNumber","getDecimal","clear","User","userName","recoveryEmail","name","address","mobileNo","isAdmin","profile_photo","UserRegistrationComponent","registration","executeSaveUser","setAccountPageId","_error","status","cancelUser","saveUser","CreatePageComponent","diaryService","diary","createPage","executeSaveNotes","saveDiary","BankBookService","id","DiaryComponent","user_notes","user_comments","userComment","getAllNotes","executeFindAllUser_Notes","diaryId","executeFindAllUser_CommentsBYnotes_id","userCommentOnPage","diary_id","executeSaveUserComment","showComment","executeDeleteNote","IncomeService","income","post","AppComponent","encapsulation","None","UserProfileComponent","executegetUserDetail","executeFindUserByuserId","updateUserForm","executeUpdateUser","CashBookService","IncomeCategoryService","incomeCategory","put","APP_URL","RouteGuardService","state","isAccountUserLoggedIn","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","IncomeCategoriesComponent","executeFindIncomeCategory","incomeCatForm","executeUpdateIncomeCategory","executeSaveIncomeCategory","saveIncomeCategory","DayBookService","Comment","user_comment","Diary","notes_heading","notes_detail","DiaryService","comment","BankBookComponent","executeFindAllBankTransactionBetweenDate","findAllBankTransaction","Income","incomeId","incomeAccount","IncomeComponent","incomeService","incomesform","executeSaveIncome","saveIncome","BalanceSheetService","LoginComponentComponent","user_password","invalidCreditials","invalidData","trim","executeAuthencationService","error","signIn","forget_password","register","ForgotPasswordComponent","emailId","forgetPassword","foo","executeForgotPassword","err","cancel","forgotPassword","Incomed","DayBookComponent","content","content2","executeFindIncomeBetweenDate","findAllIncome","ExpenseCategoryService","ResetPasswordComponent","activatedRoute","basicAuth","val","url","path","enrollmentNo","stringPattern","linkverify","passwordReset","new_password","executeUpdatePassword","executeFindUsercredential","BalanceSheetComponent","balanceSheetService","headers_exp","executeFindBalanceSheetBetweenDate","grossProfit","executeFindBalanceSheet","UserService","formData","FormData","append","resetPassword","pattern_url","routes","component","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","exports","SidebarComponent","bootstrapModule","ExpenseService","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-rsidebar',\n  templateUrl: './rsidebar.component.html',\n  styleUrls: ['./rsidebar.component.css']\n})\nexport class RsidebarComponent implements OnInit {\n  \n  constructor( ) { }\n\n\n  ngOnInit(): void {\n    \n  }\n\n\n\n}\n","<aside class=\"control-sidebar\" style=\"width:405px; margin-top: 290px;\">\n    <ul class=\"nav nav-treeview\">\n        <li class=\"nav-item\">\n            <app-calculator></app-calculator>\n        </li>\n    </ul>\n\n</aside>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\ndeclare var $: any;\n//import { AccountService } from './_services';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  progressInfos: [];\n  selectedFiles: FileList;\n  profilePhoto: string;\n  i = 1;\n  @ViewChild(\"imageName\") imageName: ElementRef;\n  selectFiles(event): void {\n    this.progressInfos = [];\n    this.selectedFiles = event.target.files;\n  }\n\n  constructor(private basicAuthService : BasicAuthService, private router : Router, private userService : UserService) {\n\n   }\n\n  ngOnInit(): void { \n  $(document).ready(function(){\n    // Prepare the preview for profile picture\n        $(\"#selectedFiles\").change(function(this: typeof readURL ){\n            readURL(this);\n        });\n    });\n    function readURL(input : any) {\n      if (input.files && input.files[0]) {\n          var reader = new FileReader();\n    \n          reader.onload = function (e): void {\n              $('#wizardPicturePreview').attr('src', e.target!.result).fadeIn('slow');\n          }\n          reader.readAsDataURL(input.files[0]);\n      }\n    }\n    $('a').on('click', function(){\n      $('a').removeClass('selected');\n      $(this).addClass('selected');\n  });\n this.executeFindProfilePhoto();\n  }\n\n  executeSaveProfilePhoto() {\n    this.userService.executeupdateProfilePhoto(this.basicAuthService.getAccountAuthenticatedUserId(), this.selectedFiles[0]).subscribe(\n      () => {\n\n      }\n    )\n  }\n\n  onChange(event) {\n    var fileName = this.imageName.nativeElement.value\n    var idxDot = fileName.lastIndexOf(\".\") + 1;\n    var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n    if (!(extFile==\"jpg\" || extFile==\"jpeg\" || extFile==\"png\"))\n        alert(\"Only jpg/jpeg and png files are allowed!\");\n    this.selectedFiles = event.srcElement.files\n    this.executeSaveProfilePhoto();\n\n}\n\nexecuteFindProfilePhoto() {\n  this.userService.executeFindProfilePhoto(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n    (res)=> {\n      this.profilePhoto = 'data:image/jpeg;base64,' + res;\n    }\n  )\n}\n\n\n\n\n\n\ndataURItoBlob(dataURI) {\n\n  var byteString;\n  if (dataURI.split(',')[0].indexOf('base64') >= 0)\n      byteString = atob(dataURI.split(',')[1]);\n  else\n      byteString = unescape(dataURI.split(',')[1]);\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n  var ia = new Uint8Array(byteString.length);\n  for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ia], {type:mimeString});\n}\n\n  logout() {\n    this.basicAuthService.logout();\n    window.history.pushState({}, document.title, \"/\" + \"#\");\n}\n}\n","<nav class=\"main-header navbar navbar-expand\" style=\"margin-left: 0%;\">\n\n    <ul class=\"navbar-nav pt5\">\n        <li class=\"nav-item \" style=\"padding-top: 13.5px;\">\n            <a class=\"nav-link menu\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\n                Menu\n            </a>\n        </li>\n\n        <li class=\"nav-item pt5 fullWidthHome\">\n            <a routerLink=\" \" class=\"nav-link pt5\">\n                Home\n            </a>\n        </li>\n        <li class=\"nav-item pt5\">\n            <a routerLink=\"userprofile\" class=\"nav-link pt5\">\n                Profile\n            </a>\n        </li>\n        <li class=\"nav-item pt5\">\n            <a role=\"button\"  class=\"nav-link text-white pt5\" (click)=\"logout()\">\n               Logout\n            </a>\n        </li>\n    </ul>\n\n\n    <div class=\"d-flex justify-content-center center fullWidth\">\n\n        <h2 style=\"color:rgb(252, 248, 11);   font-weight: 400; margin-top: -0.2rem;\">Personal</h2>\n\n\n        <h3 style=\"color:rgb(245, 6, 6); margin-top: 0rem;  font-weight: 400;\">Account</h3>\n\n    </div>\n\n\n\n\n\n\n\n    <ul class=\"navbar-nav ml-auto\">\n\n        <li class=\"nav-item\" style=\"padding-top: 8px;\">\n            <a class=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\">\n                <i class=\"fa fa-calculator\" aria-hidden=\"true\"></i>\n            </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\">\n                <div class=\"user-panel  d-flex\">\n                    <div class=\"picture-container\">\n                        <div class=\"picture\" >\n                            <img  [src]=\"profilePhoto\" class=\"picture-src\" id=\"wizardPicturePreview\" title=\"\" >\n                            <input type=\"file\"  id=\"selectedFiles\" #imageName name=\"photo\" (change)=\"onChange($event)\" accept=\".jpg,.jpeg,.png\"/>\n                        </div>\n                    </div>\n\n                </div>\n            </a>\n        </li>\n    </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { CashBookService } from 'src/app/service/data/cash-book.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { Incomed } from '../day-book/day-book.component';\n\n@Component({\n  selector: 'app-cash-book',\n  templateUrl: './cash-book.component.html',\n  styleUrls: ['./cash-book.component.css']\n})\nexport class CashBookComponent implements OnInit {\n  from :Date;\n  to : Date;\n  details: Incomed[] = [] ;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  content :String;\n  content2 : String;\n closingBalance : number;\n\n  constructor(private service:CashBookService,\n    private basicAuthService : BasicAuthService) { }\n\n\n    ngOnInit(): void {\n      this.executeFindNetAmount();\n    }\n\n\n  headers = ['S NO.', 'Date', 'Amount', 'Pay/receive']\n  \n\n\nfindAllCashTransaction(from, to) {\n  this.service.executeFindAllCashTransactionBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(), from, to).subscribe(\n    (response : any) => {\n      this.details = response;\n      console.log(this.details);\n      this.dtTrigger.next();\n    }\n  );\n}\n\nexecuteFindNetAmount() {\n  this.service.executeFindNetAmount(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n    (response : any) => {\n      this.closingBalance = response;\n    }\n  );\n}\n\n  \n\n}\n","<div class=\"outer container-fluid\">\n    <div class=\"inner\">\n        <form #cashBook=\"ngForm\">\n            <table class=\"table table-bordered table-responsive-xl table-sm\">\n                <thead>\n                    <tr>\n                        <th style=\"width:8.5%;\">\n                            <h2 class=\"text-left fontCashBook\">Cash Book</h2>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">Date From </h4>\n                            <input class=\"sd \" type=\"date\" #selected_date_from=\"ngModel\" ngModel name=\"selected_date_from\" [(ngModel)]=\"from\" required/>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" [(ngModel)]=\"to\" required/>\n                        </th>\n                        <th class=\"button\">\n                            <button type=\"button\" (click)=\"findAllCashTransaction(from, to)\" [disabled]=\"cashBook.invalid\">\n                            <h4 class=\"text-white mb-0\">Show</h4>\n                        </button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th class=\"thHeading\" *ngFor=\"let column of headers \">\n                            <h4 class=\"text-white font mb-0\">\n                                {{column}}\n                            </h4>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr class=\"trRowDetail\" *ngFor=\"let detail of details; index as i; \">\n                        <td>\n                            {{i + 1}}\n                        </td>\n                        <td>\n                            {{detail[0]}}\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\" class=\"biColor\">\n                                + {{detail[1]}}\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\" class=\"colorRed\">\n                                - {{detail[1]}}\n                            </div>\n\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\">\n                                receive\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\">\n                                pay\n                            </div>\n                        </td>\n                    </tr>\n                    <tr class=\"bgBlack\">\n                        <td colspan=\"2 \">\n                            <h4 class=\"fontCashBook\">Closing Balance </h4>\n                        </td>\n\n                        <td colspan=\"2 \" class=\"closingBalance\">\n                            <h3 class=\"fontCashBook\">{{closingBalance}}</h3>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ExpenseCategoryService } from 'src/app/service/data/expense-category.service';\nimport { ExpenseService } from 'src/app/service/data/expense.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\nexport class Expense {\n  constructor(\n    public expenseId: number,\n    public expenseAccount: string,\n    public expenseCategoryId: number,\n    public amount: number,\n    public transDate: Date,\n    public receiveMode: string,\n    public remark: string,\n    public userId: number\n  ) { }\n\n  public getExpenseId(): number {\n    return this.expenseId;\n  }\n  public getExpenseAccount(): string {\n    return this.expenseAccount;\n  }\n\n  public getExpenseCategoryId(): number {\n    return this.expenseCategoryId;\n  }\n\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  public getTansDate(): Date {\n    return this.transDate;\n  }\n\n  public getReceiveMode(): string {\n    return this.receiveMode;\n  }\n\n  public getRemark(): string {\n    return this.remark;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n\n}\n\n@Component({\n  selector: 'app-expense',\n  templateUrl: './expense.component.html',\n  styleUrls: ['./expense.component.css']\n})\nexport class ExpensesComponent implements OnInit {\n  expense: Expense;\n  details: ExpenseCategories[] = [];\n  message: string;\n  spinner_status: number = 0;\n  constructor(private expenseService: ExpenseService, private serviceCatSerice: ExpenseCategoryService, private basicAuthService: BasicAuthService) {\n    this.expense = new Expense(0, '', 2, 0, null, 'CE', '', basicAuthService.getAccountAuthenticatedUserId());\n  }\n\n  refreshAllCategories() {\n    this.serviceCatSerice.executeFindAllExpenseCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      response => {\n        this.details = response;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n  }\n\n  saveExpense(expenseForm) {\n    this.spinner_status = 1;\n    this.expenseService.executeSaveExpense(this.expense).subscribe(\n      () => {\n        this.spinner_status = 0\n        this.message = 'Expense Addition Successful';\n        expenseForm.reset();\n      }\n    );\n  }\n}","<section class=\"content\" *ngIf='message'>\n\n    <div class=\"card card-success\">\n        <div class=\"card-header\">\n            <h3 class=\"card-title text-center\"> {{message}}</h3>\n            <div class=\"card-tools\">\n                <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n                    <i class=\"fas fa-times\"></i></button>\n            </div>\n        </div>\n    </div>\n</section>\n<div class=\"container-fluid wrapper text-black font-weight-bold\">\n    <div class=\"container \">\n        <p class=\"pt-2 pb-1 heading\">Expense</p>\n    </div>\n    <form action=\"\" #expenseForm=\"ngForm\">\n        <div class=\"row  form-group\">\n            <br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Expense<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #expenseref=\"ngModel\" ngModel [(ngModel)]='expense.expenseAccount' name=\"expense\" placeholder=\"expense\" required [ngClass]=\"{'form-control': true, \n                   'is-invalid': !expenseref?.valid && expenseref?.touched,  \n                   'is-valid': expenseref?.valid && expenseref?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"expenseref?.errors?.required && expenseref?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"expenseref?.errors?.minlength && expenseref?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n        <h4>Category<sup class=\"color\">*</sup></h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n\n\n                <select id=\"inputState\" class=\"form-control\" ngModel [(ngModel)]=\"expense.expenseCategoryId\" #expenseCategoryId=\"ngModel\" required name=\"incomCategoryId\" id=\"incomCategoryId\" [ngClass]=\"{'form-control' : true,\n          'is-invalid' : !expenseCategoryId?.valid && expenseCategoryId?.touched,\n          'is-valid' : expenseCategoryId?.valid && expenseCategoryId?.touched}\">\n          <option *ngFor=\"let detail of details\" value='{{detail.expenseCategoryId}}'>{{detail.expenseCategoryName}}</option>\n      </select>\n\n                <small *ngIf=\"expenseCategoryId?.errors?.required && expenseCategoryId?.touched\" class=\"form-text custom-invalid-feedback color\">Category is not selected</small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg- 6 pl-5 form-group\">\n                <label for=\"fntext\"> \n        <h4>Amount<sup class=\"color\">*</sup></h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n                <input type=\"text\" placehoder=\"Amount\" #annualref=\"ngModel\" ngModel [(ngModel)]='expense.amount' name=\"annual\" required [ngClass]=\"{'form-control': true }\" />\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col  col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\">\n                <h4>Date<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"date\" ngModel [(ngModel)]='expense.transDate' required placeholder=\"from\" name=\"from_date\" id=\"from_date\" #from_date=\"ngModel\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !from_date?.valid && from_date?.touched,  \n                'is-valid': from_date?.valid && from_date?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.required && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.minlength && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n        <h4>Remark<sup class=\"color\">*</sup></h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"text\" #remarkref=\"ngModel\" ngModel [(ngModel)]='expense.remark' name=\"remark\" required placeholder=\"remark\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !remarkref?.valid && remarkref?.touched,  \n                'is-valid': remarkref?.valid && remarkref?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.required && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.minlength && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Remark requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group \" style=\"margin-top: -2%;\">\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n        <h4>ReceiveMode</h4>\n      </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6\">\n                <div class=\" form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n            <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]=\"expense.receiveMode\" value=\"CE\">Cash Receipt\n          </label></h4>\n                </div>\n                <div class=\"form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n            <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]=\"expense.receiveMode\" value=\"BE\"> Bank Receipt\n          </label></h4>\n                </div>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between mrt-4\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\">\n                <h4 class=\"mt-o mb-0 btnText\" routerLink=\" \">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"saveExpense(expenseForm)\" [disabled]=\"expenseForm.invalid\">\n              <h4 class=\"mt-o mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h4>\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExpenseCategoryService } from 'src/app/service/data/expense-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\n@Component({\n  selector: 'app-expense-categories',\n  templateUrl: './expense-categories.component.html',\n  styleUrls: ['./expense-categories.component.css']\n})\n\n\n\nexport class ExpenseCategoriesComponent implements OnInit {\n  expenseCategory: ExpenseCategories;\n  expenseCategoryId: number;\n  spinner_status: number = 0;\n  constructor(private route: ActivatedRoute, private service: ExpenseCategoryService, private router: Router, private basicAuthService : BasicAuthService) {\n    this.expenseCategory = new ExpenseCategories(0, '', '',basicAuthService.getAccountAuthenticatedUserId());\n    this.expenseCategoryId = this.route.snapshot.params['expenseCategoryId'];\n\n    if (this.expenseCategoryId != 0) {\n      this.service.executeFindExpenseCategory(this.expenseCategoryId).subscribe(\n        response => {\n          this.expenseCategory = response;\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n  }\n  saveExpenseCategory(expenseCategoryForm) {\n    this.spinner_status = 1;\n    if (this.expenseCategoryId != 0) {\n      this.service.executeUpdateExpenseCategory(this.expenseCategoryId, this.expenseCategory).subscribe(\n        () => {\n          this.spinner_status = 0;\n          this.router.navigate(['expensescategory']);\n          expenseCategoryForm.reset()\n        }\n      );\n    }\n    else {\n      this.service.executeSaveExpenseCategory(this.expenseCategory).subscribe(\n        () => {\n          this.router.navigate(['expensescategory']);\n\n        }\n      );\n\n    }\n\n  }\n}\n","<div class=\"container-fluid  pt-0 font-weight-bold\">\n    <section class=\"content  pt-1 text-center\">\n        <h1 class=\"heading\">Expenses Categories</h1>\n    </section>\n    <form action=\"\" #expenseCategoryForm=\"ngForm\">\n        <div class=\"row  form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Name<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n                <input type=\"text\" ngModel [(ngModel)]='expenseCategory.expenseCategoryName' required minlength=\"3\" placeholder=\"Enter Name\" name=\"po\" id=\"fntext\" #bindname=\"ngModel\" [ngClass]=\"{'form-control': true, \n         'is-invalid': !bindname?.valid && bindname?.touched,  \n         'is-valid': bindname?.valid && bindname?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.required && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.minlength && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 3 characters.</small>\n                <BR>\n\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Detail<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n                <textarea ngModel required rows=\"2\" cols=\"50\" minlength=\"5\"   [(ngModel)]='expenseCategory.expenseCategoryDetails' #category=\"ngModel\" name=\"catdetail\" placeholder=\"Enter Categorie Detail\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !category?.valid && category?.touched,  \n                'is-valid': category?.valid && category?.touched}\"></textarea>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.required && category?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required\n                </small>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.minlength && category?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 5 characters.\n                </small><BR>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between \">\n            <button type=\"button\" class=\"btn btn-sm btn-md btncancel btn-xs btn-lg\">\n                <h3 class=\"mt-0 mb-0 btnText\" routerLink=\" \">Cancel</h3>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm btn-md  btn-xs btn-lg\" (click)=\"saveExpenseCategory(expenseCategoryForm)\" [disabled]=\"expenseCategoryForm.invalid\">\n                <h3 class=\"mt-0 mb-0 btnText\"> <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h3>\n            </button>\n        </div>\n    </form>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { APP_URL } from 'src/app.constants';\nimport { map } from 'rxjs/operators';\n\nexport const ACCOUNT_AUTHENTICATED_USER = 'account_authenticatedUser';\nexport const ACCOUNT_TOKEN = 'account_user_token';\nexport const ACCOUNT_PAGE_ID = 'account_user_pageId';\nexport const ACCOUNT_USER_ID = 'account_user_userId';\n\nexport class AuthenticationBean {\n  constructor(public userId: number) { }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BasicAuthService {\n\n  constructor(private http: HttpClient) { }\n\n  executeAuthencationService(username, password) {\n    let basicAuthHeaderString = 'Basic ' + window.btoa(username + \":\" + password);\n    let headers = new HttpHeaders(\n      {\n        Authorization: basicAuthHeaderString\n      }\n    );\n    return this.http.get<AuthenticationBean>(`${APP_URL}/user/basicauth`, { headers }).pipe(\n      map(\n        data => {\n          localStorage.setItem(ACCOUNT_USER_ID, \"\" + data.userId);\n          localStorage.setItem(ACCOUNT_AUTHENTICATED_USER, username);\n          localStorage.setItem(ACCOUNT_TOKEN, basicAuthHeaderString);\n          return data;\n        }\n      )\n    );\n  }\n\n  getAccountAuthenticatedUserId(): number {\n    return parseInt(localStorage.getItem(ACCOUNT_USER_ID));\n  }\n\n  getAccountAuthenticatedUser() {\n    return localStorage.getItem(ACCOUNT_AUTHENTICATED_USER);\n  }\n\n  getAccountAuthenticatedToken() {\n     return localStorage.getItem(ACCOUNT_TOKEN);\n  }\n\n  isAccountUserLoggedIn() {\n    let user = localStorage.getItem(ACCOUNT_AUTHENTICATED_USER);\n    return !(user == null);\n  }\n\n  logout() {\n    localStorage.removeItem(ACCOUNT_AUTHENTICATED_USER);\n    localStorage.removeItem(ACCOUNT_TOKEN);\n    localStorage.removeItem(ACCOUNT_PAGE_ID);\n    localStorage.removeItem(ACCOUNT_USER_ID);\n  }\n\n  AccountPageId(): string {\n    var pageId = localStorage.getItem(ACCOUNT_PAGE_ID);\n    if (pageId === null) {\n      localStorage.setItem(ACCOUNT_PAGE_ID, 'login');\n    }\n    return pageId;\n  }\n\n  setAccountPageId(pageId: string) {\n    localStorage.setItem(ACCOUNT_PAGE_ID, pageId);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { ExpenseCategoryService } from 'src/app/service/data/expense-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\nexport class ExpenseCategories {\n\n  constructor(\n    public expenseCategoryId: number,\n    public expenseCategoryName: string,\n    public expenseCategoryDetails: string,\n    public userId: number\n  ) { }\n\n  public getExpenseCategoryId(): number {\n    return this.expenseCategoryId;\n  }\n  public getExpenseCategoryName(): string {\n    return this.expenseCategoryName;\n  }\n  public getExpenseCategoryDetails(): string {\n    return this.expenseCategoryDetails;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n}\n\n@Component({\n  selector: 'app-expense-cat-table',\n  templateUrl: './expense-cat-table.component.html',\n  styleUrls: ['./expense-cat-table.component.css']\n})\n\nexport class ExpenseCatTableComponent implements OnInit {\n \n  \n  message: string;\n  details: ExpenseCategories[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n\n  constructor(private service: ExpenseCategoryService, private router: Router, private basicAuthService: BasicAuthService) {\n\n  }\n  refreshAllCategories() {\n    this.service.executeFindAllExpenseCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (response: any) => {\n        this.details = response;\n        this.dtTrigger.next();\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      lengthMenu: [5, 10, 15, 20]\n    };\n\n\n\n  }\n\n  deleteExpenseCategory(expenseCategoryId) {\n    this.service.executeDeleteCategory(expenseCategoryId).subscribe(\n      () => {\n        this.refreshAllCategories();\n        this.message = 'Deleted Expense Category ' + expenseCategoryId;\n      }\n    );\n  }\n\n  updateExpenseCategory(expenseCategoryId) {\n    this.router.navigate(['expenseCatForm', expenseCategoryId]);\n  }\n\n  addNewExpenseCategory() {\n    this.router.navigate(['expenseCatForm', 0]);\n  }\n\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n}\n\n\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <div class=\"d-flex justify-content-center floattop sticky-top \">\n            <h1 class=\"mt mb pt-1 pb-1\">Expense Categories</h1>\n            <button type=\"button\" class=\"btn btnfixed\" (click)=\"addNewExpenseCategory()\">\n                <h4 class=\"newCategory\">New Category</h4></button>\n        </div>\n        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-bordered table-sm table-striped\">\n            <thead style=\"background-color:  rgb(0, 0, 0);\">\n                <tr>\n                    <th>\n                        <h3 class=\"mb-0 mth color\">Category Name</h3>\n                    </th>\n                    <th>\n                        <h3 class=\"mth mb-0 color\">Category Details</h3>\n                    </th>\n                    <th>\n                        <h3 class=\"mth mb-0 color\">Action</h3>\n                    </th>\n\n                </tr>\n            </thead>\n            <tbody>\n\n                <tr *ngFor=\"let detail of details\" style=\"height:2px; padding-top: 0.5rem; padding-bottom: -10rem;\">\n                    <td>{{detail.expenseCategoryName}}</td>\n                    <td>{{detail.expenseCategoryDetails}}</td>\n                    <td style=\"line-height: 0.6rem;\">\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(77, 255, 7); padding-bottom: 0rem;  margin-top:-0.8rem; margin-bottom: -0.2rem;\" (click)=\"updateExpenseCategory(detail.expenseCategoryId)\">Edit</button> &nbsp;\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(255, 7, 7); padding-bottom: 0rem; margin-top: -2rem; margin-bottom: -1.5rem; \" (click)=\"deleteExpenseCategory(detail.expenseCategoryId)\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n            <tfoot>\n                <tr>\n                    <th>Category Name</th>\n                    <th>category Details</th>\n                    <th></th>\n                </tr>\n            </tfoot>\n        </table>\n\n\n\n\n\n    </div>\n\n</div>","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BasicAuthService } from '../http/basic-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpIntercepterBasicAuthService implements HttpInterceptor {\n\n  constructor(private basicAuthService: BasicAuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n\n    let basicAuthHeaderString = this.basicAuthService.getAccountAuthenticatedToken();\n    let username = this.basicAuthService.getAccountAuthenticatedUser();\n    if (basicAuthHeaderString && username) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: basicAuthHeaderString\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { IncomeCategoryService } from 'src/app/service/data/income-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nexport class IncomeCategories {\n\n  constructor(\n    public incomeCategoryId: number,\n    public incomeCategoryName: string,\n    public incomeCategoryDetails: string,\n    public userId: number\n  ) { }\n\n  public getIncomeCategoryId(): number {\n    return this.incomeCategoryId;\n  }\n  public getIncomeCategoryName(): string {\n    return this.incomeCategoryName;\n  }\n  public getIncomeCategoryDetails(): string {\n    return this.incomeCategoryDetails;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n}\n@Component({\n  selector: 'app-income-cat-table',\n  templateUrl: './income-cat-table.component.html',\n  styleUrls: ['./income-cat-table.component.css']\n})\n\nexport class IncomeCatTableComponent implements OnInit {\n\n  message: string;\n  details: IncomeCategories[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  constructor(private service: IncomeCategoryService, private router: Router, private basicAuthService: BasicAuthService) {\n\n  }\n  refreshAllCategories() {\n    this.service.executeFindAllIncomeCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (response: any) => {\n        this.details = response;\n        console.log(response)\n        this.dtTrigger.next();\n      }\n    );\n\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      lengthMenu: [5, 10, 15, 20]\n    };\n  }\n  deleteIncomeCategory(incomeCategoryId) {\n    this.service.executeDeleteCategory(incomeCategoryId).subscribe(\n      () => {\n        this.refreshAllCategories();\n        this.message = 'Deleted Income Category ' + incomeCategoryId;\n      }\n    );\n  }\n\n  updateIncomeCategory(incomeCategoryId) {\n    this.router.navigate(['incomeCatForm', incomeCategoryId]);\n  }\n\n  addNewIncomeCategory() {\n    this.router.navigate(['incomeCatForm', 0]);\n  }\n\n  ngOnDestroy() {\n    this.dtTrigger.unsubscribe();\n  }\n}\n\n\n\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <div class=\"d-flex justify-content-center floattop sticky-top \">\n            <h1 class=\"mt mb pt-1 pb-1\">Income Categories</h1>\n            <button type=\"button\" class=\"btn btnfixed\" (click)=\"addNewIncomeCategory()\">\n                <h4 class=\"newCategory\">New Category</h4>\n            </button>\n        </div>\n        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-bordered table-sm table-striped\">\n            <thead style=\"background-color:  rgb(0, 0, 0);\">\n                <tr>\n                    <th class=\"tableHeading\">\n                        <h3 class=\"mth mb-0 \">Category Name</h3>\n                    </th>\n                    <th class=\"tableHeading\">\n                        <h3 class=\"mth mb-0\"> Category Details</h3>\n                    </th>\n                    <th>\n                        <h3 class=\"mth mb-0\">Action</h3>\n                    </th>\n\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let detail of details\" style=\"height:2px; padding-top: 0.5%; padding-bottom: -10%;\">\n                    <td class=\"color\">{{detail.incomeCategoryName}}</td>\n                    <td class=\"color\">{{detail.incomeCategoryDetails}}</td>\n                    <td style=\"line-height: 0.6rem;\">\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(77, 255, 7); padding-bottom: 0rem;  margin-top:-0.8rem; margin-bottom: -0.2rem;\" (click)=\"updateIncomeCategory(detail.incomeCategoryId)\">Edit</button> &nbsp;\n                        <button type=\"button\" class=\"btn\" style=\"color: rgb(255, 7, 7); padding-bottom: 0rem; margin-top: -2rem; margin-bottom: -1.5rem; \" (click)=\"deleteIncomeCategory(detail.incomeCategoryId)\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n            <tfoot>\n                <tr>\n                    <th>Category Name</th>\n                    <th>category Details</th>\n                    <th></th>\n                </tr>\n            </tfoot>\n        </table>\n\n\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css']\n})\nexport class CalculatorComponent implements OnInit {\n\n  currentNumber = '0';\n  firstOperand = null;\n  operator = null;\n  waitForSecondNumber = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public getNumber(v: string){\n    console.log(v);\n    if(this.waitForSecondNumber)\n    {\n      this.currentNumber = v;\n      this.waitForSecondNumber = false;\n    }else{\n      this.currentNumber === '0'? this.currentNumber = v: this.currentNumber += v;\n\n    }\n  }\n\n  getDecimal(){\n    if(!this.currentNumber.includes('.')){\n        this.currentNumber += '.'; \n    }\n  }\n\n  private doCalculation(op , secondOp){\n    switch (op){\n      case '+':\n      return this.firstOperand += secondOp; \n      case '-': \n      return this.firstOperand -= secondOp; \n      case '*': \n      return this.firstOperand *= secondOp; \n      case '/': \n      return this.firstOperand /= secondOp; \n      case '=':\n      return secondOp;\n    }\n  }\n  public getOperation(op: string){\n    console.log(op);\n\n    if(this.firstOperand === null){\n      this.firstOperand = Number(this.currentNumber);\n\n    }else if(this.operator){\n      const result = this.doCalculation(this.operator , Number(this.currentNumber))\n      this.currentNumber = String(result);\n      this.firstOperand = result;\n    }\n    this.operator = op;\n    this.waitForSecondNumber = true;\n\n    console.log(this.firstOperand);\n \n  }\n\n  public clear(){\n    this.currentNumber = '0';\n    this.firstOperand = null;\n    this.operator = null;\n    this.waitForSecondNumber = false;\n  }\n}\n","<div class=\"calculator container\">\n\n\n    <div class=\"display-container\">\n        <p class=\"casio\">CASIO</p>\n        <div class=\"solar\">\n\n        </div>\n        <span class=\"model\"><i>fx</i>-85MS</span>\n    </div>\n\n\n\n    <input type=\"text\" class=\"calculator-screen\" [value]=\"currentNumber\" disabled />\n\n    <div class=\"calculator-keys\">\n\n        <button type=\"button\" (click)=\"getOperation('+')\" class=\"operator\" value=\"+\">+</button>\n        <button type=\"button\" (click)=\"getOperation('-')\" class=\"operator\" value=\"-\">-</button>\n        <button type=\"button\" (click)=\"getOperation('*')\" class=\"operator\" value=\"*\">&times;</button>\n        <button type=\"button\" (click)=\"getOperation('/')\" class=\"operator\" value=\"/\">&#247;</button>\n\n        <button type=\"button\" (click)=\"getNumber('7')\" value=\"7\">7</button>\n        <button type=\"button\" (click)=\"getNumber('8')\" value=\"8\">8</button>\n        <button type=\"button\" (click)=\"getNumber('9')\" value=\"9\">9</button>\n\n\n        <button type=\"button\" (click)=\"getNumber('4')\" value=\"4\">4</button>\n        <button type=\"button\" (click)=\"getNumber('5')\" value=\"5\">5</button>\n        <button type=\"button\" (click)=\"getNumber('6')\" value=\"6\">6</button>\n\n\n        <button type=\"button\" (click)=\"getNumber('1')\" value=\"1\">1</button>\n        <button type=\"button\" (click)=\"getNumber('2')\" value=\"2\">2</button>\n        <button type=\"button\" (click)=\"getNumber('3')\" value=\"3\">3</button>\n\n\n        <button type=\"button\" (click)=\"getNumber('0')\" value=\"0\">0</button>\n        <button type=\"button\" (click)=\"getDecimal()\" class=\"decimal\" value=\".\">.</button>\n        <button type=\"button\" (click)=\"clear()\" class=\"all-clear\" value=\"all-clear\">AC</button>\n\n        <button type=\"button\" (click)=\"getOperation('=')\" class=\"equal-sign\" value=\"=\">=</button>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { LoginComponentComponent } from '../login-component/login-component.component';\n\n\nexport class User {\n  constructor(\n    public userId: number,\n    public userName: String,\n    public password: String,\n    public recoveryEmail: String,\n    public name: String,\n    public address: String,\n    public mobileNo: number,\n    public isAdmin: boolean,\n    public profile_photo : File,\n    public amount: number\n  ) { }\n  public getUserId(): number {\n    return this.userId;\n  }\n  public getUserName(): String {\n    return this.userName;\n  }\n  public getPassword(): String {\n    return this.password;\n  }\n  public getName(): String {\n    return this.name;\n  }\n  public getAddress(): String {\n    return this.address;\n  }\n  public getMobileNumber(): number {\n    return this.mobileNo;\n  }\n  public getRecoveryEmail(): String {\n    return this.recoveryEmail;\n  }\n  public getIsAdmin(): Boolean {\n    return this.isAdmin;\n  }\n  public getProfilePhoto(): File {\n    return this.profile_photo;\n  }\n  public getAmount(): number {\n    return this.amount;\n  }\n}\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent implements OnInit {\n  user: User;\n  userId : number;\n  message: String;\n  spinner_status : number = 0;\n  constructor(private userService: UserService, private router: Router, private basicAuthService: BasicAuthService\n    ,private route: ActivatedRoute ) \n  {\n    this.user = new User(0, '', '', '', '', '', null, true, null, 0);\n    this.userId = this.route.snapshot.params['userId'];\n   }\n\n  ngOnInit(): void {\n  }\n\n  saveUser(registration) {\n    this.spinner_status = 1;\n    if(this.userId != 0 ) {\n    this.userService.executeSaveUser(this.user).subscribe(\n      () => {\n        this.spinner_status = 0;\n        this.message = 'Registration Successful';\n        registration.reset();\n        this.basicAuthService.setAccountPageId('login');\n      },\n      _error => {\n       if(_error.status == 302)\n       {\n        this.spinner_status = 0;\n         alert(\" user name is already registered\")\n         \n       }\n       else if(_error.status == 417)\n       {\n        this.spinner_status = 0;\n          alert(\"email Id is already registered\")\n          \n       }\n      });\n    }\n  }\n  cancelUser() {\n    this.basicAuthService.setAccountPageId('login');\n  }\n}\n","<div class=\"container-fluid font-weight-bold\">\n    <section class=\"content\" *ngIf='message'>\n        <div class=\"card card-success\">\n            <div class=\"card-header\">\n                <h3 class=\"card-title text-center\"> {{message}}</h3>\n                <div class=\"card-tools\">\n                    <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </section>\n    <div class=\"container\">\n        <h2 class=\"pt-2 pb-0 header\">User Registration</h2>\n    </div>\n    <form action=\"\" #registration=\"ngForm\">\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>User Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #user_name=\"ngModel\" ngModel [(ngModel)]='user.userName' pattern=\"[a-zA-Z0-9_]{5,15}$\" name=\"user_name\" placeholder=\"User Name\"  required [ngClass]=\"{'form-control': true, \n                 'is-invalid': !user_name?.valid && user_name?.touched,  \n                 'is-valid': user_name?.valid && user_name?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"user_name?.errors?.required && user_name?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"user_name?.errors?.pattern && user_name?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 5 and maximum 15 characters and character may be upper leeter, small letter digit and underscore.</small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #name=\"ngModel\" ngModel [(ngModel)]='user.name' name=\"name\" placeholder=\"Name\" minlength=\"2\" required [ngClass]=\"{'form-control': true, \n                    'is-invalid': !name?.valid && name?.touched,  \n                    'is-valid': name?.valid && name?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.required && name?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.minlength && name?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Address<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #address=\"ngModel\" ngModel [(ngModel)]='user.address' name=\"address\" placeholder=\"Address\" required minlength=\"10\" [ngClass]=\"{'form-control': true, \n           'is-invalid': !address?.valid && address?.touched,  \n           'is-valid': address?.valid && address?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.required && address?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.minlength && address?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 10 characters. </small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Mobile Number<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 co col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #mobile=\"ngModel\" ngModel [(ngModel)]='user.mobileNo' name=\"mobile\" pattern=\"[6789][0-9]{9}\" placeholder=\"mobile number\" required [ngClass]=\"{'form-control': true, \n                    'is-invalid': !mobile?.valid && mobile?.touched,  \n                    'is-valid': mobile?.valid && mobile?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.required && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.pattern && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid mobile number.</small>\n            </div>\n        </div>\n        <br>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n                    <h4>Email<sup class=\"color\">*</sup></h4>\n                </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"email\" #email=\"ngModel\" ngModel [(ngModel)]='user.recoveryEmail' name=\"email\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"email\" [ngClass]=\"{'form-control': true, \n                    'is-invalid': !email?.valid && email?.touched,  \n                    'is-valid': email?.valid && email?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.required && email?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.pattern && email?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid email</small>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\"><h4>Password<sup class=\"color\">*</sup></h4></label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"password\" #password=\"ngModel\"  name=\"password\" ngModel [(ngModel)]=\"user.password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n                    pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" [ngClass]=\"{ 'form-control': true,\n                    'is-invalid': !password?.valid && password?.touched,  \n                    'is-valid': password?.valid && password?.touched }\" required/>\n                <small *ngIf=\"password?.errors?.required && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Field is required</small>\n                <small *ngIf=\"password?.errors?.pattern && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n            </div>\n        </div>  \n        <div class=\"d-flex justify-content-between\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\" (click)=\"cancelUser()\">\n                <h4 class=\"mt-o mb-0 btnText\">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"saveUser(registration)\" [disabled]=\"registration.invalid\">\n                <h4 class=\"mt-o mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Register</h4>\n            </button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Diary, DiaryService } from 'src/app/service/data/diary.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-create-page',\n  templateUrl: './create-page.component.html',\n  styleUrls: ['./create-page.component.css']\n})\nexport class CreatePageComponent implements OnInit {\n\n  diary : Diary\n  message : String;\n  spinner_status = 0;\n  constructor(private diaryService : DiaryService, private basicAuthService : BasicAuthService) {\n    this.diary = new Diary('', '', this.basicAuthService.getAccountAuthenticatedUserId());\n   }\n  saveDiary(createPage) {\n    this.message;\n    this.spinner_status = 1;\n    this.diaryService.executeSaveNotes(this.diary).subscribe(\n      ()=>  {\n        this.message = \"notes saved successfully\";\n        createPage.reset();\n        this.spinner_status = 0;\n      }\n    )\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content-wrapper\">\n  \n    <form #createPage=\"ngForm\">\n        <div class=\"card\">\n            <h1 class=\"text-center\"><span>Create</span> <span class=\"heading\">  Notes</span></h1>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"comment-box ml-2\">\n                        <div class=\"comment-area\"> <textarea class=\"form-control\" #heading=\"ngModel\" ngModel  name=\"heading\" placeholder=\"heading\" [(ngModel)]=\"diary.notes_heading\" rows=\"3\" minlength=\"5\" required></textarea> </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"comment-box ml-2\">\n                        <div class=\"comment-area\"> <textarea class=\"form-control\" #detail=\"ngModel\" ngModel  name=\"detail\" placeholder=\"detail\" [(ngModel)]=\"diary.notes_detail\" rows=\"6\" minlength=\"5\" required></textarea> </div>\n                        <div class=\"comment-btns mt-2\">\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                </div>\n                                <div class=\"col-6\">\n                                    <div class=\"pull-right\"> <button class=\"btn btn-success btn-block\" (click)=\"saveDiary(createPage)\" [disabled]=\"createPage.invalid\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Save <i class=\"fa fa-long-arrow-right ml-1\"></i></button> </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n\n  </div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BankBookService {\n\n  constructor(\n    private http :HttpClient\n  ) { }\n\n  executeFindAllBankTransactionBetweenDate(id, from, to) {\n    return this.http.get<any[]>(`${APP_URL}/bank/${id}/${from}/to/${to}`);\n  }\n\n  executeFindNetAmount(userId) {\n    return this.http.get<Object>(`${APP_URL}/netAmount/${userId}`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Comment, DiaryService } from 'src/app/service/data/diary.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-diary',\n  templateUrl: './diary.component.html',\n  styleUrls: ['./diary.component.css']\n})\nexport class DiaryComponent implements OnInit {\n  user_notes : any[] = [];\n  user_comments : any[] = [];\n  userComment : Comment;\n  spinner_status = 0;\n  constructor(private diaryService : DiaryService, private basicAuthService : BasicAuthService) { \n    this.userComment = new Comment('', 0);\n  }\n\n  ngOnInit(): void {\n    this.getAllNotes();\n  }\n\n  getAllNotes() {\n    this.diaryService.executeFindAllUser_Notes(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (res) => {\n          this.user_notes = res;\n          if(this.user_notes.length === 0)\n            this.spinner_status = 2;\n      }\n    )\n  }\n  showComment(diaryId) {\n    this.diaryService.executeFindAllUser_CommentsBYnotes_id(diaryId).subscribe(\n      (res) => {\n          this.user_comments = res;\n      }\n    )\n  }\n  saveComment(id, userCommentOnPage) {\n    this.spinner_status = 1;\n    this.userComment.diary_id = id;\n    this.diaryService.executeSaveUserComment(this.userComment).subscribe(\n      () => {\n        this.showComment(id);\n        userCommentOnPage.reset();\n        this.spinner_status = 0;\n      }\n    )\n  }\n  deleteNote(diary_id) {\n    this.diaryService.executeDeleteNote(diary_id).subscribe(\n      () =>  {\n        this.getAllNotes();\n      }\n    )\n  }\n\n}\n","<div id=\"commentGroup\">\n    <div class=\" card border-0 rounded-4 mb-1 mt-5 alert alert-warning\" *ngIf=\"spinner_status === 2\">\n        <div class=\"text-center text-warning\"><i class=\"icon fas fa-exclamation-triangle fa-3x\"></i></div>\n        <p class=\"text-warning text-center\">you have not any note now</p>\n    </div>\n    <div class=\"card rounded-4 mt-5 mb-1\" *ngFor=\"let user_note of user_notes; let i = index;\">\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <button type=\"button\" class=\"btn bg-white trash\" (click)=\"deleteNote(user_note.diary_id)\"><i class=\"fa fa-trash trash\"></i></button>\n            </div>\n            <div class=\"col-6\">\n        <p class=\"notes_date\">{{user_note.createDate}}</p>    \n    </div>\n        </div>\n        <hr style=\"margin-top: -0.5rem;\">\n        <div class=\"card-body\">\n            <h4 class=\"text-center heading\">{{user_note.notes_heading}}</h4>\n            <p class=\"notes_detail\">{{user_note.notes_detail}}</p>\n            \n        </div>\n        <div class=\"bg-white p-2\">\n            <div class=\"p-2 cursor\" data-toggle=\"collapse\" [attr.href]=\"'#collapse-' + i\" (click)=\"showComment(user_note.diary_id)\"><i class='far fa-comment  fa-2x' style=\"color: rgb(101, 214, 107);\"></i><span class=\"ml-1\">Comment</span></div><br>\n        </div>  \n  \n        <div class=\"collapse\" [attr.id]=\"'collapse-' + i\" data-parent=\"#commentGroup\">    \n            <div class=\"card border-0 rounded-0 mb-1\" style=\"box-shadow: 0px 8px 16px 0px white;\">\n              <form #commentForm=\"ngForm\">\n                <div class=\"d-flex flex-row align-items-start\">\n                    <textarea class=\"ml-1 shadow-none textarea\" name=\"comment\" required minlength=\"5\" ngModel [(ngModel)]=\"userComment.user_comment\" #comment=\"ngModel\" placeholder=\"Enter your Comment\"\n                    [ngClass]=\"{'form-control': true, \n                    'is-invalid': !comment?.valid && comment?.touched}\"></textarea>\n               </div>\n               <small id=\"f\" *ngIf=\"comment?.errors?.required && comment?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required </small>\n                    <small id=\"f\" *ngIf=\"comment?.errors?.minlength && comment?.touched\" class=\"form-text custom-invalid-feedback color\">comment requires atleast 5 characters.</small>\n\n                <div class=\"mt-2 text-right\"><button class=\"btn btn-primary btn-sm shadow-none\" type=\"button\" [disabled]=\"commentForm.invalid\" (click)=\"saveComment(user_note.diary_id, commentForm)\"> <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Post comment</button></div><br>\n              </form>\n              <div class=\"row\" *ngFor=\"let user_comment_res of user_comments;\">\n                <div class=\"card col-12\">\n                    <p class=\"mt fontDate\">{{user_comment_res.comment_date}}</p>\n                    <p class=\"font\"> {{user_comment_res.comment}}</p>\n                </div> \n              </div>                 \n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncomeService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeSaveIncome(income) {\n    return this.http.post(`${APP_URL}/incomes/`,income);\n  }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from './service/data/user.service';\nimport { BasicAuthService } from './service/http/basic-auth.service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent implements OnInit{\n  title = 'myaccount';\n \n\n  constructor(public basicAuthService: BasicAuthService) {\n   }\n\n   ngOnInit() {}\n \n}\n\n\n","<div *ngIf=\"basicAuthService.AccountPageId()==='home'\">\n    <div class=\"wrapper\">\n        <app-header></app-header>\n        <app-rsidebar></app-rsidebar>\n        <app-sidebar></app-sidebar>\n        <router-outlet></router-outlet>\n\n    </div>\n</div>\n<div *ngIf=\"basicAuthService.AccountPageId()==='login'\">\n    <app-login-component></app-login-component>\n</div>\n<div *ngIf=\"basicAuthService.AccountPageId()==='register'\">\n    <app-user-registration></app-user-registration>\n</div>\n<div *ngIf=\"basicAuthService.AccountPageId()==='forget_password'\">\n    <app-forgot-password></app-forgot-password>\n</div>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { User } from '../user-registration/user-registration.component';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\nuser: User\nuserId : number;\nmessage: String;\nspinner_status : number= 0;\nconstructor(private userService : UserService, private basicAuthService: BasicAuthService) { \n  this.user = new User(0, '', '', '', '', '', 0, true, null, 0);\n}\n\nngOnInit(): void {\n  this.executegetUserDetail();\n}\n\n\nexecutegetUserDetail() {\n      this.userService.executeFindUserByuserId(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n       (res) =>  {\n            this.user = res;\n        }\n      )\n}\n\nexecuteUpdateUser(updateUserForm) {\n  this.spinner_status = 1;\n  this.userService.executeUpdateUser(this.user).subscribe(\n    () =>  {\n      this.spinner_status = 0;\n      this.message = 'Successful update';\n      updateUserForm.reset();\n     },\n     _error => {\n      if(_error.status == 417)\n      {\n       this.spinner_status = 0;\n       alert(\"email Id is already registered\")   \n      }\n     }\n   );\n}\n\n\n}\n","<div class=\"container-fluid font-weight-bold\">\n    <section class=\"content\" *ngIf='message'>\n        <div class=\"card card-success\">\n            <div class=\"card-header\">\n                <h3 class=\"card-title text-center\"> {{message}}</h3>\n                <div class=\"card-tools\">\n                    <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </section>\n    <div class=\"container\">\n        <h2 class=\"pt-2 pb-0 header\">Profile</h2>\n    </div>\n    <form action=\"\" #updateUserForm=\"ngForm\">\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>User Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #user_name=\"ngModel\" [disabled]=\"true\" ngModel [(ngModel)]='user.userName' name=\"user_name\" placeholder=\"User Name\" minlength=\"2\" required [ngClass]=\"{'form-control': true}\">    \n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Name<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #name=\"ngModel\" ngModel [(ngModel)]='user.name' name=\"name\" placeholder=\"Name\" required [ngClass]=\"{'form-control': true, \n             'is-invalid': !name?.valid && name?.touched,  \n             'is-valid': name?.valid && name?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.required && name?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"name?.errors?.minlength && name?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Address<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #address=\"ngModel\" ngModel [(ngModel)]='user.address' name=\"address\" placeholder=\"Address\" required minlength=\"10\" [ngClass]=\"{'form-control': true, \n                    'is-invalid': !address?.valid && address?.touched,  \n                     'is-valid': address?.valid && address?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.required && address?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"address?.errors?.minlength && address?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 10 characters. </small>\n            </div>\n        </div>\n        <div class=\"row  form-group\"><br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Mobile Number<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 co col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #mobile=\"ngModel\" ngModel [(ngModel)]='user.mobileNo' name=\"mobile\" pattern=\"^[6789][0-9]{9}$\" placeholder=\"mobile number\" required [ngClass]=\"{'form-control': true, \n                    'is-invalid': !mobile?.valid && mobile?.touched,  \n                    'is-valid': mobile?.valid && mobile?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.required && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"mobile?.errors?.pattern && mobile?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid mobile number.</small>\n            </div>\n        </div><br>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n                    <h4>Email<sup class=\"color\">*</sup></h4>\n                </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"email\" #email=\"ngModel\" ngModel [(ngModel)]='user.recoveryEmail' name=\"email\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" placeholder=\"email\" [ngClass]=\"{'form-control': true, \n                    'is-invalid': !email?.valid && email?.touched,  \n                    'is-valid': email?.valid && email?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.required && email?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"email?.errors?.pattern && email?.touched\" class=\"form-text custom-invalid-feedback color\">Invalid email</small>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\">\n                <h4 class=\"mt-1 mb-0 btnText\">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"executeUpdateUser(updateUserForm)\" [disabled]=\"updateUserForm.invalid\">\n                <h4 class=\"mt-1 mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Update</h4>\n            </button>\n        </div>\n    </form>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\nimport { Incomed } from 'src/app/components/day-book/day-book.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashBookService {\n\n  constructor(\n    private http :HttpClient\n  ) { }\n\n  executeFindAllCashTransactionBetweenDate(id, from, to) {\n    return this.http.get<any[]>(`${APP_URL}/cash/${id}/${from}/to/${to}`);\n  }\n\n  executeFindNetAmount(userId) {\n    return this.http.get<Object>(`${APP_URL}/netAmount/${userId}`)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { APP_URL } from 'src/app.constants';\nimport { IncomeCategories } from 'src/app/table/income-cat-table/income-cat-table.component';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IncomeCategoryService {\n \n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  executeFindAllIncomeCategories(userId: number) {\n    return this.http.get<IncomeCategories[]>(`${APP_URL}/users/${userId}/incomecategories`);\n  }\n\n  executeDeleteCategory(incomeCategoryId: any) {\n     return this.http.delete<String>(`${APP_URL}/incomecategories/${incomeCategoryId}`);\n  }\n\n  executeFindIncomeCategory(incomeCategoryId: number) {\n    return this.http.get<IncomeCategories>(`${APP_URL}/incomecategories/${incomeCategoryId}`);\n  }\n\n  executeUpdateIncomeCategory(incomeCategoryId: Number, incomeCategory: IncomeCategories) {\n    return this.http.put<IncomeCategories>(`${APP_URL}/incomecategories/${incomeCategoryId}`,incomeCategory);\n  }\n\n  executeSaveIncomeCategory(incomeCategory: IncomeCategories) {\n    return this.http.post(`${APP_URL}/incomecategories/`,incomeCategory);\n  }\n\n}\n","export const APP_URL = \"http://localhost:8080\"","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from\n  '@angular/router';\nimport { BasicAuthService } from './basic-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(private basicAuthService: BasicAuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.basicAuthService.isAccountUserLoggedIn())\n      return true;\n      this.basicAuthService.setAccountPageId('login');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserRegistrationComponent } from './components/user-registration/user-registration.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\n\nimport { HeaderComponent } from './components/header/header.component';\n\nimport { IncomeCategoriesComponent } from './components/income-categories/income-categories.component';\nimport { ExpensesComponent } from './components/expense/expense.component';\nimport { IncomeComponent } from './components/income/income.component';\nimport { CashBookComponent } from './components/cash-book/cash-book.component';\nimport { BankBookComponent } from './components/bank-book/bank-book.component';\nimport { DayBookComponent } from './components/day-book/day-book.component';\nimport { BalanceSheetComponent } from './components/balance-sheet/balance-sheet.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\nimport { HttpIntercepterBasicAuthService } from './service/http/http-intercepter-basic-auth.service';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ExpenseCatTableComponent } from './table/expense-cat-table/expense-cat-table.component';\nimport { ExpenseCategoriesComponent } from './components/expense-categories/expense-categories.component';\nimport { IncomeCatTableComponent } from './table/income-cat-table/income-cat-table.component';\nimport { CalculatorComponent } from './calculator/calculator.component';\nimport { RsidebarComponent } from './components/rsidebar/rsidebar.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { CreatePageComponent } from './components/create-page/create-page.component';\nimport { DiaryComponent } from './components/diary/diary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationComponent,\n    SidebarComponent,\n    HeaderComponent,\n    ExpenseCategoriesComponent,\n    IncomeCategoriesComponent,\n    ExpensesComponent,\n    IncomeComponent,\n    CashBookComponent,\n    BankBookComponent,\n    DayBookComponent,\n    BalanceSheetComponent,\n    UserProfileComponent,\n    LoginComponentComponent,\n    IncomeCatTableComponent,\n    ExpenseCatTableComponent,\n    CalculatorComponent,\n    RsidebarComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    CreatePageComponent,\n    DiaryComponent,\n   \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    DataTablesModule,\n    \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpIntercepterBasicAuthService, multi: true },\n   \n  \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IncomeCategoryService } from 'src/app/service/data/income-category.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { IncomeCategories } from 'src/app/table/income-cat-table/income-cat-table.component';\n\n\n@Component({\n  selector: 'app-income-categories',\n  templateUrl: './income-categories.component.html',\n  styleUrls: ['./income-categories.component.css']\n})\nexport class IncomeCategoriesComponent implements OnInit {\n\n  incomeCategory: IncomeCategories;\n  incomeCategoryId: number;\n  spinner_status : number= 0;\n  constructor(private route: ActivatedRoute, private service: IncomeCategoryService, private router: Router, private basicAuthService : BasicAuthService) {\n    this.incomeCategory = new IncomeCategories(0, '', '',basicAuthService.getAccountAuthenticatedUserId());\n    this.incomeCategoryId = this.route.snapshot.params['incomeCategoryId'];\n    console.log(this.incomeCategoryId);\n    console.log(\"value\");\n    if (this.incomeCategoryId != 0) {\n      this.service.executeFindIncomeCategory(this.incomeCategoryId).subscribe(\n        response => {\n          this.incomeCategory = response;\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n  }\n  \n  saveIncomeCategory(incomeCatForm) {\n    this.spinner_status = 1;\n    if (this.incomeCategoryId != 0) {\n      this.service.executeUpdateIncomeCategory(this.incomeCategoryId, this.incomeCategory).subscribe(\n        data => {\n          this.spinner_status = 0;\n          this.router.navigate(['incomecategory']);\n          incomeCatForm.reset();\n        }\n      );\n    }\n    else {\n      this.service.executeSaveIncomeCategory(this.incomeCategory).subscribe(\n        data => {\n          this.router.navigate(['incomecategory']);\n\n        }\n      );\n\n    }\n\n  }\n}\n","<div class=\"container-fluid  pt-0 font-weight-bold\">\n    <section class=\"conatiner content pt-1 text-center\">\n        <h1 class=\"heading\">Income Categories</h1>\n    </section>\n    <form action=\"\" #incomesCategoryForm=\"ngForm\">\n        <div class=\"row form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Name<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n\n                <input type=\"text\" ngModel [(ngModel)]='incomeCategory.incomeCategoryName' required minlength=\"5\" placeholder=\"Enter Name\" name=\"po\" id=\"fntext\" #bindname=\"ngModel\" [ngClass]=\"{'form-control': true, \n         'is-invalid': !bindname?.valid && bindname?.touched,  \n         'is-valid': bindname?.valid && bindname?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.required && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"bindname?.errors?.minlength && bindname?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 5 characters.</small>\n                <BR>\n\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col-sm-6 pl-4\">\n                <label for=\"fntext\">\n          <h1 class=\"hp\">Category Detail<sup class=\"color\">*</sup></h1>\n        </label>\n            </div>\n            <div class=\"col-sm-6 pr-5\">\n                <textarea ngModel required minlength=\"5\" rows=\"2\" cols=\"50\" [(ngModel)]='incomeCategory.incomeCategoryDetails' #category=\"ngModel\" name=\"catdetail\" placeholder=\"Enter Categorie Detail\" [ngClass]=\"{'form-control': true, \n          'is-invalid': !category?.valid && category?.touched,  \n          'is-valid': category?.valid && category?.touched}\"></textarea>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.required && category?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required\n        </small>\n                <small id=\"fnHelp\" *ngIf=\"category?.errors?.minlength && category?.touched\" class=\"form-text custom-invalid-feedback color\">requires atleast 5 characters.\n        </small>\n                <BR>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between \">\n            <button type=\"button\" class=\"btn btncancel btn-sm btn-xs btn-md  btn-lg\">\n                <h3 class=\"mt-0 mb-0 btnText\" routerLink=\" \">Cancel</h3>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit  btn-sm btn-xs btn-md btn-lg\" (click)=\"saveIncomeCategory(incomesCategoryForm)\" [disabled]=\"incomesCategoryForm.invalid\">\n                <h3 class=\"mt-0 mb-0 btnText\"> <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h3>\n            </button>\n\n        </div>\n    </form>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\nimport { Incomed } from 'src/app/components/day-book/day-book.component';\nimport { Income } from 'src/app/components/income/income.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DayBookService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeFindIncomeBetweenDate(id, from, to) {\n    return this.http.get<Incomed[]>(`${APP_URL}/incomes/${id}/${from}/to/${to}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\nexport class Comment {\n  constructor(\n    public user_comment : String,\n    public  diary_id : number)\n     {}\n    public getUser_comment() : String {\n      return this.user_comment;\n    }\n    \n    public getDiary_id() : number {\n      return this.diary_id;\n    }\n}\n\nexport class Diary {\n  constructor(\n    public notes_heading : String,\n    public notes_detail : String,\n    public  userId : number) {}\n    public getNotes_heading() : String {\n      return this.notes_heading;\n    }\n    public getNotes_detail() : String {\n      return this.notes_detail;\n    }\n    public getUserId() : number {\n      return this.userId;\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiaryService {\n\n  constructor(private http : HttpClient) { }\n\n  executeFindAllUser_Notes(userId) {\n    return this.http.get<any[]>(`${APP_URL}/diary_update/${userId}`);\n  }\n\n  executeDeleteNote(diaryId: any) {\n    return this.http.delete<String>(`${APP_URL}/delete_notes/${diaryId}`);\n }\n\n  executeFindAllUser_CommentsBYnotes_id(diaryId) {\n    return this.http.get<any[]>(`${APP_URL}/comment_update/${diaryId}`);\n  }\n  executeSaveUserComment(comment) {\n    return this.http.post(`${APP_URL}/save_comment/`,comment);\n  }\n  \n\n  executeSaveNotes(diary) {\n    return this.http.post(`${APP_URL}/save_diary/`,diary);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { BankBookService } from 'src/app/service/data/bank-book.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { Incomed } from '../day-book/day-book.component';\n\n@Component({\n  selector: 'app-bank-book',\n  templateUrl: './bank-book.component.html',\n  styleUrls: ['./bank-book.component.css']\n})\nexport class BankBookComponent implements OnInit {\n  from :Date;\n  to : Date;\n  details: Incomed[] = [] ;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  content :String;\n  content2 : String;\n  closingBalance : number;\n\n  constructor(\n    private service:BankBookService,\n    private basicAuthService : BasicAuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.executeFindNetAmount();\n  }\n  \n  headers = ['S NO.', 'Date', 'Amount', 'Pay/receive']\n  findAllBankTransaction(from, to) {\n    this.service.executeFindAllBankTransactionBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(), from, to).subscribe(\n      (response : any) => {\n        this.details = response;\n        console.log(this.details);\n        this.dtTrigger.next();\n      }\n    );\n  }\n\n  executeFindNetAmount() {\n    this.service.executeFindNetAmount(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      (response : number) => {\n        this.closingBalance = response;\n      }\n    )\n  }\n\n}\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <form #bankBook=\"ngForm\">\n            <table class=\"table table-bordered table-responsive-xl table-sm\">\n                <thead>\n                    <tr>\n                        <th style=\"width:8.5%;\">\n                            <h2 class=\"text-left fontBankBook\">Bank Book</h2>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">Date From </h4>\n                            <input  type=\"date\" #selected_date_from=\"ngModel\" ngModel name=\"selected_date_from\" [(ngModel)]=\"from\" required/>\n                        </th>\n                        <th class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" [(ngModel)]=\"to\" required/>\n                        </th>\n                        <th class=\"button\">\n                            <button type=\"button\" (click)=\"findAllBankTransaction(from, to)\" [disabled]=\"bankBook.invalid\">\n                            <h4 class=\"mt-0 mb-0 text-white\">Show</h4>\n                        </button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th class=\"thHeading\" *ngFor=\"let column of headers \">\n                            <h4 class=\"text-white font mb-0\">\n                                {{column}}\n                            </h4>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr class=\"trRowDetail\" *ngFor=\"let detail of details; index as i; \">\n                        <td>\n                            {{i + 1}}\n                        </td>\n                        <td>\n                            {{detail[0]}}\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\" class=\"biColor\">\n                                + {{detail[1]}}\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\" class=\"colorRed\">\n                                - {{detail[1]}}\n                            </div>\n\n                        </td>\n                        <td>\n                            <div *ngIf=\"detail[2] == 'BI'\">\n                                receive\n                            </div>\n                            <div *ngIf=\"detail[2] == 'BE'\">\n                                pay\n                            </div>\n                        </td>\n                    </tr>\n                    <tr class=\"bgBlack\">\n                        <td colspan=\"2 \">\n                            <h4 class=\"fontBankBook\">Closing Balance </h4>\n                        </td>\n\n                        <td colspan=\"2 \" class=\"closingBalance\">\n                            <h3 class=\"fontBankBook\">{{closingBalance}}</h3>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IncomeCategoryService } from 'src/app/service/data/income-category.service';\nimport { IncomeService } from 'src/app/service/data/income.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { IncomeCategories } from 'src/app/table/income-cat-table/income-cat-table.component';\n\nexport class Income {\n  constructor(\n    public incomeId: number,\n    public incomeAccount: string,\n    public incomeCategoryId: number,\n    public amount: number,\n    public transDate: Date,\n    public receiveMode: string,\n    public remark: string,\n    public userId: number\n  ) { }\n\n  public getIncomeId(): number {\n    return this.incomeId;\n  }\n  public getIncomeAccount(): string {\n    return this.incomeAccount;\n  }\n\n  public getIncomeCategoryId(): number {\n    return this.incomeCategoryId;\n  }\n\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  public getTansDate(): Date {\n    return this.transDate;\n  }\n\n  public getReceiveMode(): string {\n    return this.receiveMode;\n  }\n\n  public getRemark(): string {\n    return this.remark;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n\n}\n\n@Component({\n  selector: 'app-income',\n  templateUrl: './income.component.html',\n  styleUrls: ['./income.component.css']\n})\nexport class IncomeComponent implements OnInit {\n\n  income: Income;\n  details: IncomeCategories[] = [];\n  message: string;\n  spinner_status : number = 0;\n  constructor(private incomeService: IncomeService, private serviceCatSerice: IncomeCategoryService, private basicAuthService: BasicAuthService) {\n    this.income = new Income(0, '', 2, 0, null, 'CI', '', basicAuthService.getAccountAuthenticatedUserId());\n  }\n\n  refreshAllCategories() {\n    this.serviceCatSerice.executeFindAllIncomeCategories(this.basicAuthService.getAccountAuthenticatedUserId()).subscribe(\n      response => {\n        this.details = response;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.refreshAllCategories();\n  }\n\n  saveIncome(incomesform) {\n    this.spinner_status = 1;\n    this.incomeService.executeSaveIncome(this.income).subscribe(\n      response => {\n        this.spinner_status = 0;\n        this.message = 'Income Addition Successful';\n        incomesform.reset();\n      }\n    );\n\n  }\n\n\n\n  \n\n}\n","<section class=\"content\" *ngIf='message'>\n\n    <div class=\"card card-success\">\n        <div class=\"card-header\">\n            <h3 class=\"card-title text-center\"> {{message}}</h3>\n            <div class=\"card-tools\">\n\n                <button type=\"button\" class=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n          <i class=\"fas fa-times\"></i></button>\n            </div>\n        </div>\n    </div>\n\n</section>\n<div class=\"container-fluid   text-black font-weight-bold\">\n    <div class=\"container \">\n        <h1 class=\"pt-2 pb-1 heading\">Income</h1>\n    </div>\n    <form action=\"\" #incomeForm=\"ngForm\">\n        <div class=\"row  form-group\">\n            <br>\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\"><br>\n                <h4>Income<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\"><br>\n                <input type=\"text\" class=\"mrInput\" #incomebind=\"ngModel\" ngModel [(ngModel)]='income.incomeAccount' name=\"income\" placeholder=\"income\" required [ngClass]=\"{'form-control': true, \n                     'is-invalid': !incomebind?.valid && incomebind?.touched,  \n                     'is-valid': incomebind?.valid && incomebind?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"incomebind?.errors?.required && incomebind?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"incomebind?.errors?.minlength && incomebind?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n          <h4>Category<sup class=\"color\">*</sup></h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n                <select id=\"inputState\" class=\"form-control\" ngModel [(ngModel)]=\"income.incomeCategoryId\" #incomeCategoryId=\"ngModel\" required name=\"incomCategoryId\" id=\"incomCategoryId\" [ngClass]=\"{'form-control' : true,\n                'is-invalid' : !incomeCategoryId?.valid && incomeCategoryId?.touched,\n                'is-valid' : incomeCategoryId?.valid && incomeCategoryId?.touched}\">\n            <option *ngFor=\"let detail of details\" value='{{detail.incomeCategoryId}}'>{{detail.incomeCategoryName}}</option>\n        </select>\n            <small *ngIf=\"incomeCategoryId?.errors?.required && incomeCategoryId?.touched\" class=\"form-text custom-invalid-feedback color\">Category is not selected</small>\n            </div>\n        </div>\n        <div class=\"row form-group mb-0\">\n            <div class=\"col col-xs-6 col-sm-6 col-md-6 col-lg- 6 pl-5 form-group\">\n                <label for=\"fntext\"> \n          <h4>Amount<sup class=\"color\">*</sup></h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-lg-6 col-md-6 pr-5\">\n                <input type=\"text\" placehoder=\"Amount\" #annualref=\"ngModel\" ngModel [(ngModel)]='income.amount' name=\"amount\" required [ngClass]=\"{'form-control': true }\" />\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col  col-xs-6 col-sm-6 col-md-6 col-lg-6 pl-5\">\n                <h4>Date<sup class=\"color\">*</sup></h4>\n            </div>\n            <div class=\"sd-container col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"date\" ngModel [(ngModel)]='income.transDate' required placeholder=\"from\" name=\"from_date\" id=\"from_date\" #from_date=\"ngModel\" [ngClass]=\"{'form-control': true, \n                'is-invalid': !from_date?.valid && from_date?.touched,  \n                'is-valid': from_date?.valid && from_date?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.required && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"from_date?.errors?.minlength && from_date?.touched\" class=\"form-text custom-invalid-feedback color\">First Name requires atleast 2 characters.</small>\n            </div>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n          <h4>Remark<sup class=\"color\">*</sup></h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6 pr-5\">\n                <input type=\"text\" #remarkref=\"ngModel\" ngModel [(ngModel)]='income.remark' name=\"remark\" required placeholder=\"remark\" [ngClass]=\"{'form-control': true, \n        'is-invalid': !remarkref?.valid && remarkref?.touched,  \n        'is-valid': remarkref?.valid && remarkref?.touched}\">\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.required && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                <small id=\"fnHelp\" *ngIf=\"remarkref?.errors?.minlength && remarkref?.touched\" class=\"form-text custom-invalid-feedback color\">Remark requires atleast 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"row form-group \" style=\"margin-top: -2%;\">\n            <div class=\"col col-sm-6 col-xs-6 col-md-6 col-lg-6 pl-5 form-group\">\n                <label for=\"fntext\">\n          <h4>ReceiveMode</h4>\n        </label>\n            </div>\n            <div class=\"col-sm-6 col-xs-6 col-md-6 col-lg-6\">\n                <div class=\" form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n              <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]='income.receiveMode' value=\"CI\">Cash Receipt\n            </label></h4>\n                </div>\n                <div class=\"form-check-inline mrt-5\">\n                    <h4>\n                        <label class=\"form-check-label\">\n              <input type=\"radio\" class=\"form-check-input\" name=\"radio1\" id=\"receiveMode\" name=\"receiveMode\" #receiveMode=\"ngModel\" [(ngModel)]='income.receiveMode' value=\"BI\"> Bank Receipt\n            </label></h4>\n                </div>\n            </div>\n        </div>\n        <div class=\"d-flex justify-content-between mrt-4\">\n            <button type=\"button\" class=\"btn btncancel btn-sm bg-red  btn-md btn-lg\">\n                <h4 class=\"mt-o mb-0 btnText\" routerLink=\" \">Cancel</h4>\n            </button>\n            <button type=\"button\" class=\"btn btnsubmit btn-sm  btn-md btn-lg\" (click)=\"saveIncome(incomeForm)\" [disabled]=\"incomeForm.invalid\">\n                <h4 class=\"mt-o mb-0 btnText\"><span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Submit</h4>\n            </button> \n        </div>\n    </form>\n</div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BalanceSheetService {\n\n  constructor(private http : HttpClient) { }\n\n  executeFindBalanceSheetBetweenDate(userId, from, to) {\n    return this.http.get<any[]>(`${APP_URL}/balanceSheet/${userId}/${from}/to/${to}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponentComponent implements OnInit {\n\n  invalidCreditials: boolean;\n  invalidData: boolean;\n  username: string = '';\n  user_password: string = '';\n  constructor(private basicAuthService: BasicAuthService, private router: Router) {\n    this.invalidCreditials = false;\n    this.invalidData = false;\n  }\n\n  ngOnInit() {\n  }\n       \n  signIn() {\n    if (this.username.trim().length === 0 || this.user_password.trim().length === 0) {\n      this.invalidData = true;\n      this.invalidCreditials = false;\n      return;\n    }\n    this.basicAuthService.executeAuthencationService(this.username, this.user_password).subscribe(\n      data => {\n        this.basicAuthService.setAccountPageId('home');\n      },\n      error => {\n        this.invalidData = false;\n        this.invalidCreditials = true;\n      }\n    )\n  }\n\n  register() {\n    this.basicAuthService.setAccountPageId('register');\n  }\n\n  forget_password() {\n    this.basicAuthService.setAccountPageId('forget_password');\n  }\n  \n}","<div class=\"container-fluid\">\n  <div *ngIf=\"invalidCreditials\" class=\"alert alert-danger alert-dismissible mb-0 pb-0\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\n    Invalid Username or Password !\n  </div>\n  <div class=\"loginbox\"> <img src=\"../assets/dist/img/avtar.png\" class=\"avatar\">\n    <h1>Login Here</h1>\n    <form method=\"post\" action=\"#\">\n      <div class=\"form-group\">\n        <p>Username</p>\n        <input type=\"text\" #userName=\"ngModel\" placeholder=\"username\" ngModel [(ngModel)]=\"username\" name=\"userName\" \n          pattern=\"[a-zA-Z0-9_]{5,15}$\" class=\"mt\" [ngClass]=\"{\n            'is-invalid': !userName?.valid && userName?.touched,  \n            'is-valid': userName?.valid && userName?.touched }\" required />\n      </div>  \n      <div class=\"form-group\">\n        <p>Password</p>\n        <input type=\"password\" #password=\"ngModel\"  name=\"password\" ngModel [(ngModel)]=\"user_password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n          pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" class=\"mt\" [ngClass]=\"{ \n              'is-invalid': !password?.valid && password?.touched,  \n              'is-valid': password?.valid && password?.touched }\" required/>\n        <small *ngIf=\"password?.errors?.required && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Field is required</small>\n        <small *ngIf=\"password?.errors?.pattern && password?.touched\" class=\"form-text mt custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n      </div>  \n      <a role=\"button\" (click)=\"signIn()\" class=\"loginButton btn btn-block pt-2\"> login </a>\n      <div class=\"row\">\n        <div class=\"col-6 ml-0 mr-0 pl-0 mt-3\"><a role=\"button\" class=\"pl-0\" (click)=\"forget_password()\">Lost your password?</a> </div> \n        <div class=\"col-6 ml-0 mr-0 pl-0 mt-3\">\n        <a role=\"button\" class=\"pr-0 pl-0 ml-0 mr-0\" (click)=\"register()\">Don't have an account?</a>\n      </div>\n    </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  \n  emailId: string = '';\n  message:String;\n  err:String;\n  foo:number;\n  spinner_status :number = 0;\n  constructor(\n      private router: Router,\n      private basicAuthService: BasicAuthService,\n      private userService : UserService\n    \n  ) {\n      \n   }\n\n  ngOnInit() {\n     \n  }\n\n  forgotPassword(forgetPassword) {\n    this.foo = 0\n    this.spinner_status = 1;\n    this.userService.executeForgotPassword(this.emailId).subscribe(\n     () => {\n         this.foo = 1;\n         this.spinner_status = 0;\n         forgetPassword.reset();\n         this.message=\"Request to reset password received. Check your inbox for the reset link.\"\n      },\n      error => {\n          this.spinner_status = 0;\n          this.foo = 2;\n          forgetPassword.reset();\n          this.err = \"This email does not exist!\"\n        }\n    );\n  }\n\n  cancel() {\n    this.basicAuthService.setAccountPageId('login');\n  }\n\n\n}\n","<div class=\"container-fluid px-4 px-md-4 py-5\">\n    <div class=\"row d-flex justify-content-center align\"> \n        <div class=\"card p-0 mb-5\">\n            <div class=\"forgot\">\n                <h2 class=\"text text-center\">Forgot your password?</h2>\n                <p class=\"text\">Change your password in three easy steps. This will help you to secure your password!</p>\n                <ol class=\"list-unstyled\">\n                    <li class=\"text\"><span class=\"text-primary text-medium\">1.&nbsp;&nbsp;</span>Enter your email address below.</li>\n                    <li class=\"text\"><span class=\"text-primary text-medium\">2.&nbsp;&nbsp;</span>Our system will send you a temporary link</li>\n                    <li class=\"text\"><span class=\"text-primary text-medium\">3.&nbsp;&nbsp;</span>Use the link to reset your password</li>\n                </ol>\n            </div>\n            <p *ngIf=\"foo === 1\" class=\"text-center text-success mb-0\"> <b>{{message}}</b> </p>\n            <p *ngIf=\"foo === 2\" class=\"text-center text-danger mb-0\"> <b>{{err}} </b></p>\n            <form action=\"\"  #forgetPassword=\"ngForm\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <h3 class=\"text\">Enter your email address</h3>\n                        <input type=\"email\" #userEmail=\"ngModel\" placeholder=\"email id\" ngModel [(ngModel)]=\"emailId\" name=\"userEmail\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                             class=\"mt\" [ngClass]=\"{ 'form-control': true,\n                                'is-invalid': !userEmail?.valid && userEmail?.touched,  \n                                'is-valid': userEmail?.valid && userEmail?.touched }\" required />\n                        <small \n                                *ngIf=\"userEmail?.errors?.required && userEmail?.touched\" \n                                class=\"form-text custom-invalid-feedback color\">Email address is required\n                        </small>\n                        <small\n                                *ngIf=\"userEmail?.errors?.pattern && userEmail?.touched\" \n                                class=\"form-text custom-invalid-feedback color\">Email address is invalid\n                        </small>\n                        <small class=\"form-text text-muted text\">Enter the email address you used during the registration on PersonalBankAccount. Then we'll email a link to this address.</small>\n                    </div>\n                </div>\n                <div class=\"row mb-3\"><div class=\"col-6\">\n                    <button class=\"btn btn-danger ml-5\" type=\"submit\" (click)=\"cancel()\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Back to Login&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button></div>\n                    <div class=\"col-6\"><button class=\"btn btn-success ml-5\" type=\"submit\" [disabled]=\"forgetPassword.invalid\" (click)=\"forgotPassword(forgetPassword)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span *ngIf=\"spinner_status == 1\" class=\"spinner-border spinner-border-sm text-white\"></span>&nbsp;&nbsp;Get New Password</button> </div>\n                </div>   \n            </form> \n        </div>\n    </div> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { DayBookService } from 'src/app/service/data/day-book.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\n\nexport class Incomed {\n  constructor(\n    public incomeId: number,\n    public incomeAccount: string,\n    public incomeCategory: ExpenseCategories,\n    public amount: number,\n    public transDate: Date,\n    public receiveMode: string,\n    public remark: string,\n    public userId: number\n  ) { }\n\n  public getIncomeId(): number {\n    return this.incomeId;\n  }\n  public getIncomeAccount(): string {\n    return this.incomeAccount;\n  }\n\n  public getIncomeCategory(): ExpenseCategories {\n    return this.incomeCategory;\n  }\n\n  public getAmount(): number {\n    return this.amount;\n  }\n\n  public getTansDate(): Date {\n    return this.transDate;\n  }\n\n  public getReceiveMode(): string {\n    return this.receiveMode;\n  }\n\n  public getRemark(): string {\n    return this.remark;\n  }\n  public getUserId(): number {\n    return this.userId;\n  }\n\n\n}\n@Component({\n  selector: 'app-day-book',\n  templateUrl: './day-book.component.html',\n  styleUrls: ['./day-book.component.css']\n})\nexport class DayBookComponent implements OnInit {\n  from :Date;\n  to : Date;\n  details: Incomed[] = [] ;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  subscription: Subscription;\n  content :String;\n  content2 : String;\n  \n  headers = ['S NO.', 'Account Name','Date', 'Amount', 'Pay/Receive', 'Remark' ]\n  constructor(\n    private service : DayBookService,\n    private basicAuthService : BasicAuthService\n  ) {\n    \n   } \n\n  findAllIncome(from, to) {\n    this.content = \"value\";\n    this.content2 = this.content;\n    this.service.executeFindIncomeBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(),from, to).subscribe(\n      (response: any) => {\n        this.details = response;\n        this.dtTrigger.next();\n      }\n    );  \n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <form #dayBook=\"ngForm\">\n            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table  table-bordered table-sm table-responsive-sm\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 8.5%;\">\n                            <h2 class=\"fontDayBook\">Day Book </h2>\n                        </th>\n                        <th colspan=\"2\" class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">Date From </h4>\n                            <input type=\"date\" #selected_date_from=\"ngModel\" ngModel name=\"selected_date_from\" ngModel [(ngModel)]='from' required/>\n                        </th>\n                        <th colspan=\"2\" class=\"text-center\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" ngModel [(ngModel)]='to' required/>\n                        </th>\n                        <th class=\"button \">\n                            <button type=\"button\" [disabled]=\"dayBook.invalid\" (click)=\"findAllIncome(from, to) \">\n                                <h4 class=\"mt-0 mb-0 text-white\">Show</h4></button>\n                        </th>\n                    </tr>\n                    <th class=\"text-center\" *ngFor=\"let column of headers \">\n                        <h4 class=\"font\">{{column}}</h4>\n                    </th>\n                    <tr class=\"bgBlack\" *ngIf='content'>\n                        <th colspan=\"6 \" class=\"text-left expenseHeading\">\n                            <h4 class=\"font\">Expenses</h4>\n                        </th>\n                    </tr>\n                </thead>\n                <tr class=\"pl-0 trRowDetail\" *ngFor=\"let detail of details[1]; index as i \">\n                    <td>\n                        {{i+1}}\n                    </td>\n                    <td>\n                        {{detail[0].expenseAccount}}\n                    </td>\n                    <td>\n                        {{detail[0].transDate}}\n                    </td>\n                    <td class=\"colorRed text-center\">\n                        -{{detail[0].amount}}\n                    </td>\n                    <td class=\"text-center\">\n                        <div *ngIf=\"detail[0].receiveMode == 'BE' ||'CE' \">\n                            pay\n                        </div>\n                    </td>\n                    <td>\n                        {{detail[0].remark}}\n                    </td>\n                </tr>\n                <td colspan=\"6 \" class=\"text-left text-white bgBlack\" *ngIf='content2'><strong>\n                <h4 class=\"font\">Incomes</h4>\n                </strong></td>\n                <tbody>\n                    <tr class=\"pl-0 text-left\" *ngFor=\"let detail of details[0]; index as i \">\n                        <td>\n                            {{i+1}}\n                        </td>\n                        <td>\n                            {{detail[0].incomeAccount}}\n                        </td>\n                        <td>\n                            {{detail[0].transDate}}\n                        </td>\n                        <td class=\"colorGreen text-center\">\n                            +{{detail[0].amount}}\n                        </td>\n                        <td class=\"text-center\">\n                            <div *ngIf=\"detail[0].receiveMode == 'BI' || 'CI' \">\n                                receive\n                            </div>\n                        </td>\n                        <td>\n                            {{detail[0].remark}}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { APP_URL } from 'src/app.constants';\nimport { ExpenseCategories } from 'src/app/table/expense-cat-table/expense-cat-table.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenseCategoryService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  executeFindAllExpenseCategories(userId) {\n    return this.http.get<ExpenseCategories[]>(`${APP_URL}/users/${userId}/expensecategories`);\n  }\n\n  executeDeleteCategory(expenseCategoryId) {\n     return this.http.delete<String>(`${APP_URL}/expensecategories/${expenseCategoryId}`);\n  }\n\n  executeFindExpenseCategory(expenseCategoryId) {\n    return this.http.get<ExpenseCategories>(`${APP_URL}/expensecategories/${expenseCategoryId}`);\n  }\n\n  executeUpdateExpenseCategory(expenseCategoryId, expenseCategory) {\n    return this.http.put<ExpenseCategories>(`${APP_URL}/expensecategories/${expenseCategoryId}`,expenseCategory);\n  }\n\n  executeSaveExpenseCategory(expenseCategory) {\n    return this.http.post(`${APP_URL}/expensecategories/`,expenseCategory);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/service/data/user.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  val: string;\n  enrollmentNo: string;\n  document: Document\n  user_password: String;\n  message:String;\n  userId : String;\n  foo: number = 4;\n  new_password : String\n  spinner_status: number = 1;\n  stringPattern : String;\n  constructor(private activatedRoute: ActivatedRoute, public basicAuth : BasicAuthService,\n    private router : Router, private userService : UserService) { \n      this.val = this.activatedRoute.snapshot.url[0].path;\n      this.enrollmentNo = this.activatedRoute.snapshot.url[1].path;\n      this.stringPattern = this.activatedRoute.snapshot.url[2].path;\n      this.userId = this.activatedRoute.snapshot.url[3].path;\n      if(this.val == 'reset-password') {\n        basicAuth.setAccountPageId('reset-password')\n      }\n      else {\n        basicAuth.setAccountPageId('home')\n      }\n      this.linkverify();\n  }\n\n  ngOnInit(): void { \n    \n  }\n  executeResetPassword(passwordReset) {\n    this.spinner_status = 0;\n    if(!(this.user_password == this.new_password))\n    {\n      this.spinner_status = 1;\n      alert(\"          password not match\");\n      passwordReset.reset();\n      return;\n    }\n    this.userService.executeUpdatePassword(this.userId, this.user_password).subscribe(\n    ()  => {\n      this.foo = 2;\n      this.spinner_status = 1;\n      this.message= \"Password successfully reset. You can now log in with the new credentials.\"\n      },\n      _error => {\n        this.foo = 3;\n        this.spinner_status = 1;\n        this.message= \"The link is invalid or broken!\"\n      }\n    )\n  }\n  linkverify() {\n    this.userService.executeFindUsercredential(this.userId, this.stringPattern).subscribe(\n     (res) => {\n      this.foo = res;\n     }\n     )\n  }\n  login() {\n    this.basicAuth.setAccountPageId('login');\n    window.history.pushState({}, document.title, \"/\" + \"#\");\n  }\n}\n","  <div class=\"container-fluid\">  \n    <h1 class=\"text-center\">Personal Account Password Reset</h1><br><br>\n    <section class=\"content\" *ngIf='foo ===  2'>\n        <div class=\"container border-0\">\n            <div class=\"card-body bg-success\">\n                <h3 class=\"text-center mt-0 mb-0\"> {{message}}</h3>\n            </div><br><br>\n               <div class=\"btnLogin\"> \n                   <button type=\"button\" class=\"float-right btn btn-sm btn-primary\" (click)=\"login()\">Login</button>\n                </div>\n        </div>\n    </section>\n    <section class=\"content\" *ngIf='foo === 3'>\n        <div class=\"card card-danger\">\n            <div class=\"card-body bg-danger\">\n                <h3 class=\"text-center mt-0 mb-0\"> {{message}}</h3>\n            </div>\n        </div>\n    </section>\n    <h3 *ngIf='foo === 0' class=\"text-danger text-center\"> The link is invalid or broken!</h3>\n\n    <form action=\"\" #passwordReset=\"ngForm\" *ngIf=\"foo == 1\">\n        <div class=\"row\">\n            <div class=\"col col-md-4 col-sm-8 col-lg-4 col-xs-12\">\n                <div class=\"form-group\">\n                    <label for=\"tempPassword\">New Password</label>\n                    <input type=\"password\" name=\"temp_password\" id=\"temp_password\" ngModel [(ngModel)]=\"new_password\" #temp_password=\"ngModel\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n                      pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" class=\"mt\" [ngClass]=\"{ 'form-control': true,\n                          'is-invalid': !temp_password?.valid && temp_password?.touched,  \n                          'is-valid': temp_password?.valid && temp_password?.touched }\" required/>\n                    <small *ngIf=\"temp_password?.errors?.required && temp_password?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                    <small *ngIf=\"temp_password?.errors?.pattern && temp_password?.touched\"  class=\"form-text custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n                </div>  \n                <div class=\"form-group\">\n                    <label for=\"confirmPassword\">Confirm Password</label>\n                    <input type=\"password\" #confirm_password=\"ngModel\"  name=\"confirm_password\" ngModel [(ngModel)]=\"user_password\" id=\"user_password\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" \n                      pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,15}$\" class=\"mt\" [ngClass]=\"{ 'form-control': true,\n                          'is-invalid': !confirm_password?.valid && confirm_password?.touched,  \n                          'is-valid': confirm_password?.valid && confirm_password?.touched }\" required/>\n                    <small *ngIf=\"confirm_password?.errors?.required && confirm_password?.touched\" class=\"form-text custom-invalid-feedback color\">Field is required</small>\n                    <small *ngIf=\"confirm_password?.errors?.pattern && confirm_password?.touched\" class=\"form-text custom-invalid-feedback color\">Password is invalid.Min 8 character & Max 15 character. Password must contain at least one small & one capital alphabet and one special symbol and numeric digit.</small> \n                </div> <br>\n                <div class=\"row form-group\">\n                    <button type=\"button\" class=\"btn btn-success btn-block ml-3 mr-3\" (click)=\"executeResetPassword(passwordReset)\" [disabled]=\"passwordReset.invalid\"><b><span *ngIf=\"spinner_status == 0\" class=\"spinner-border spinner-border-sm text-white\"></span> &nbsp;Reset Password </b></button>\n                </div>       \n            </div>  \n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BalanceSheetService } from 'src/app/service/data/balance-sheet.service';\nimport { BasicAuthService } from 'src/app/service/http/basic-auth.service';\n@Component({\n  selector: 'app-balance-sheet',\n  templateUrl: './balance-sheet.component.html',\n  styleUrls: ['./balance-sheet.component.css']\n})\nexport class BalanceSheetComponent implements OnInit {\nname:string;\nfrom : Date;\nto : Date;\ndetails : any[];\ngrossProfit :number\n  constructor(\n    private basicAuthService : BasicAuthService, private balanceSheetService : BalanceSheetService\n  ) { }\nheaders = ['Incomes', 'Amount'];\nheaders_exp = ['Expenses', 'Amount']\nexecuteFindBalanceSheet(from, to) {\n  this.balanceSheetService.executeFindBalanceSheetBetweenDate(this.basicAuthService.getAccountAuthenticatedUserId(), from, to).subscribe(\n    (response : any) => {\n      this.details = response;\n     this.grossProfit = this.details[2]- this.details[3];\n    }\n  )\n}\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid outer\">\n    <div class=\"inner\">\n        <div class=\"d-flex justify-content-center floattop sticky-top bgLightBrown\">\n            <h1 class=\"heading\">Balance Sheet</h1>\n        </div>\n        <form #balanceSheet=\"ngForm\">\n            <table class=\"table table-bordered   table-md table-lg table-sm table-xl mb-0\">\n                <thead class=\"bgLightBrown\">\n                    <tr>\n                        <th colspan=\"2\" class=\"tableHeader\">\n                            <h4 class=\"font mt-0 mb-0\"> Date From </h4>\n                            <input type=\"date\" #selected_date_from=\"ngModel\" ngModel  name=\"selected_date_from\" [(ngModel)]=\"from\" required />\n                        </th>\n                        <th colspan=\"2 \" class=\"tableHeader\">\n                            <h4 class=\"font mt-0 mb-0\">To</h4>\n                            <input type=\"date\" #selected_date_to=\"ngModel\" ngModel name=\"selected_date_to\" [(ngModel)]=\"to\" required/>\n                        </th>\n                        <th class=\"button\">\n                            <button type=\"button\" class=\"btn-primary font\" style=\"margin-bottom: 0.6rem;\" [disabled]=\"balanceSheet.invalid\" (click)=\"executeFindBalanceSheet(from, to)\"> Show\n                            </button>\n                        </th>\n                    </tr>\n                </thead>\n            </table>\n        </form>\n        <div class=\"container\">\n            <table id=\"table_left\" class=\"new  table table-bordered table-sm table-md table-lg table-xl\">\n                <thead class=\"tableHeading\">\n                    <tr>\n                        <th colspan=2>\n                            <h4 class=\"font mt-0 mb-0\">Incomes</h4>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>\n                            <h3 class=\"font\">Incomes</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"font\">Amount</h3>\n                        </th>\n                    </tr>\n                </thead>\n                <tr *ngFor='let detail of details[0]'>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[0]}}\n                    </td>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[1]}}\n                    </td>\n                </tr>\n                <thead class=\"tableHeading\">\n                    <tr>\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">Total</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">{{details[2]}}</h3>\n                        </th>\n                    </tr>\n                </thead>\n            </table>\n            <table id=\"table_right\" class=\"new table  table-bordered table-sm table-md table-lg table-xl\">\n                <thead class=\"bg-black tableRight\">\n                    <tr>\n                        <th colspan=2>\n                            <h4 class=\"font mt-0 mb-0\">Expenses</h4>\n                        </th>\n                    </tr>\n                    <tr class=\"bgBlack\">\n                        <th>\n                            <h3 class=\"font\">Expenses</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"font\">Amount</h3>\n                        </th>\n                    </tr>\n                </thead>\n                <tr *ngFor='let detail of details[1]'>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[0]}}\n                    </td>\n\n                    <td class=\"pdLeft5\">\n                        {{detail[1]}}\n                    </td>\n                </tr>\n                <thead>\n                    <tr class=\"bgBlack\">\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">Total</h3>\n                        </th>\n                        <th>\n                            <h3 class=\"fontFooterTitle mt-0 mb-0\">{{details[3]}}</h3>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody class=\"text-left\">\n                    <tr>\n                      <td class=\"colorDarkGreen\"><strong><h2>Gross profit</h2></strong></td>\n                      <td class=\"colorDarkGreen\"><strong>\n                      <h2>{{grossProfit}}</h2>\n                      </strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\nimport { User } from 'src/app/components/user-registration/user-registration.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeSaveUser(user) {\n    return this.http.post(`${APP_URL}/createUser/`,user);\n  }\n\n  executeupdateProfilePhoto(userId, profilePhoto : File) {\n    const formData = new FormData();\n    formData.append('profilePhoto', profilePhoto);\n    return this.http.put(`${APP_URL}/update_profile_photo/${userId}`,formData);\n  }\n\n  executeFindProfilePhoto(userId) {\n    return this.http.get<any>(`${APP_URL}/profile_photo/${userId}`)\n  }\n\n  executeUpdatePassword(userId, resetPassword) {\n    return this.http.put(`${APP_URL}/reset-password/${userId}`,resetPassword);\n  }\n  executeFindUsercredential(userId, pattern_url) {\n    return this.http.get<number>(`${APP_URL}/user_credential/${userId}/${pattern_url}`)\n  }\n  executeForgotPassword(emailId: any) {\n    return this.http.post<any>(`${APP_URL}/forgot-password`, emailId);\n  }\n  executeFindUserByuserId(userId) {\n    return this.http.get<any>(`${APP_URL}/user/${userId}`)\n  }\n  executeUpdateUser(user) {\n    return this.http.put(`${APP_URL}/user_update`, user);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { BalanceSheetComponent } from './components/balance-sheet/balance-sheet.component';\nimport { BankBookComponent } from './components/bank-book/bank-book.component';\nimport { CashBookComponent } from './components/cash-book/cash-book.component';\nimport { DayBookComponent } from './components/day-book/day-book.component';\nimport { ExpensesComponent } from './components/expense/expense.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { IncomeComponent } from './components/income/income.component';\nimport { RouteGuardService } from './service/http/route-guard.service';\nimport { IncomeCategoriesComponent } from './components/income-categories/income-categories.component';\nimport { ExpenseCategoriesComponent } from './components/expense-categories/expense-categories.component';\nimport { IncomeCatTableComponent } from './table/income-cat-table/income-cat-table.component';\nimport { ExpenseCatTableComponent } from './table/expense-cat-table/expense-cat-table.component';\nimport { UserRegistrationComponent } from './components/user-registration/user-registration.component';\nimport { CreatePageComponent } from './components/create-page/create-page.component';\nimport { DiaryComponent } from './components/diary/diary.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nconst routes: Routes = [\n  {path: '', component: SidebarComponent, canActivate: [RouteGuardService] },\n  {path:'userprofile', component:UserProfileComponent, canActivate: [RouteGuardService]},\n  {path:'userRegistration', component:UserRegistrationComponent},\n  {path:'balancesheet', component:BalanceSheetComponent, canActivate: [RouteGuardService]},\n  {path:'page', component:CreatePageComponent, canActivate: [RouteGuardService]},\n  {path:'diary', component:DiaryComponent, canActivate: [RouteGuardService]},\n  {path:'bankbook', component:BankBookComponent, canActivate: [RouteGuardService]},\n  {path:'cashbook', component:CashBookComponent, canActivate: [RouteGuardService]},\n  {path:'daybook', component:DayBookComponent, canActivate: [RouteGuardService]},\n  {path:'expensescategory', component:ExpenseCatTableComponent, canActivate: [RouteGuardService]},\n  {path:'expenses', component:ExpensesComponent, canActivate: [RouteGuardService]},\n  {path:'reset-password/:emailId/:token/:userId', component:ResetPasswordComponent},\n  {path:'header', component:HeaderComponent, canActivate: [RouteGuardService]},\n  {path: 'income', component:IncomeComponent, canActivate: [RouteGuardService]},   \n  {path: 'incomeCatForm/:incomeCategoryId', component: IncomeCategoriesComponent, canActivate: [RouteGuardService] },\n  {path: 'expenseCatForm/:expenseCategoryId', component: ExpenseCategoriesComponent, canActivate: [RouteGuardService] },\n  {path: 'incomecategory', component: IncomeCatTableComponent, canActivate: [RouteGuardService] },\n  {path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    $('a').on('click', function(){\n      $('a').removeClass('selected');\n      $(this).addClass('selected');\n  });\n  }\n\n\n  \n  \n\n}\n","<aside class=\"main-sidebar  elevation-4\">\n    <div class=\"sidebar\" style=\"margin-top:0px\">\n        <nav class=\"mt-2\">\n            <div class=\"header pt-2 font-weight-bolder text-center \">\n                <h1 class=\"heading\"> Masters</h1>\n            </div>\n            <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                <li class=\"nav-item has-treeview\">\n                    <a routerLink=\"expensescategory\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon target color\"></i> Expense Category\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"incomecategory\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Income Category\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"expenses\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Expense\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"income\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Income\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"cashbook\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Cash Book\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"bankbook\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Bank Book\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"daybook\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Day Book\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"balancesheet\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Balance Sheet\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"page\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i> Ceate Notes\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"diary\" class=\"nav-link link\">\n                        <i class=\"fas fa-circle nav-icon color\"></i>\n                        Diary\n                    </a>\n                </li>\n                <li class=\"nav-item has-treeview\">\n                    <a class=\"nav-link link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\">\n                        <i class=\"fas fa-circle nav-icon color\"></i>\n                        <i class=\"fa fa-calculator\" aria-hidden=\"true\"></i>\n                    </a>\n                </li>\n\n            </ul>\n        </nav>\n\n    </div>\n\n</aside>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { APP_URL } from 'src/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenseService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  executeSaveExpense(expense) {\n    return this.http.post(`${APP_URL}/expense/`,expense);\n  }\n  \n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}